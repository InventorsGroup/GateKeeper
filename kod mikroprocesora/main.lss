
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800100  00001412  000014a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001412  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000e9  0080015a  0080015a  00001500  2**0
                  ALLOC
  3 .debug_aranges 000004d8  00000000  00000000  00001500  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000d40  00000000  00000000  000019d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00008390  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002212  00000000  00000000  0000aaa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00006471  00000000  00000000  0000ccba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000770  00000000  00000000  0001312c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00003454  00000000  00000000  0001389c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00003508  00000000  00000000  00016cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000688  00000000  00000000  0001a1f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
    while (*s)
      uart_put(*s++);
}

unsigned char uart_get( void ) 
{
       0:	7f c0       	rjmp	.+254    	; 0x100 <__ctors_end>
       2:	00 00       	nop
       4:	99 c0       	rjmp	.+306    	; 0x138 <__bad_interrupt>
       6:	00 00       	nop
       8:	c9 c0       	rjmp	.+402    	; 0x19c <__vector_2>
       a:	00 00       	nop
       c:	95 c0       	rjmp	.+298    	; 0x138 <__bad_interrupt>
       e:	00 00       	nop
      10:	93 c0       	rjmp	.+294    	; 0x138 <__bad_interrupt>
      12:	00 00       	nop
      14:	91 c0       	rjmp	.+290    	; 0x138 <__bad_interrupt>
      16:	00 00       	nop
      18:	8f c0       	rjmp	.+286    	; 0x138 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	8d c0       	rjmp	.+282    	; 0x138 <__bad_interrupt>
      1e:	00 00       	nop
      20:	8b c0       	rjmp	.+278    	; 0x138 <__bad_interrupt>
      22:	00 00       	nop
      24:	89 c0       	rjmp	.+274    	; 0x138 <__bad_interrupt>
      26:	00 00       	nop
      28:	87 c0       	rjmp	.+270    	; 0x138 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	85 c5       	rjmp	.+2826   	; 0xb38 <__vector_11>
      2e:	00 00       	nop
      30:	48 c5       	rjmp	.+2704   	; 0xac2 <__vector_12>
      32:	00 00       	nop
      34:	81 c0       	rjmp	.+258    	; 0x138 <__bad_interrupt>
      36:	00 00       	nop
      38:	7f c0       	rjmp	.+254    	; 0x138 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	7d c0       	rjmp	.+250    	; 0x138 <__bad_interrupt>
      3e:	00 00       	nop
      40:	7b c0       	rjmp	.+246    	; 0x138 <__bad_interrupt>
      42:	00 00       	nop
      44:	79 c0       	rjmp	.+242    	; 0x138 <__bad_interrupt>
      46:	00 00       	nop
      48:	77 c0       	rjmp	.+238    	; 0x138 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8a c0       	rjmp	.+276    	; 0x162 <__vector_19>
      4e:	00 00       	nop
      50:	73 c0       	rjmp	.+230    	; 0x138 <__bad_interrupt>
      52:	00 00       	nop
      54:	71 c0       	rjmp	.+226    	; 0x138 <__bad_interrupt>
      56:	00 00       	nop
      58:	6f c0       	rjmp	.+222    	; 0x138 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d5 c1       	rjmp	.+938    	; 0x408 <__vector_23>
      5e:	00 00       	nop
      60:	6b c0       	rjmp	.+214    	; 0x138 <__bad_interrupt>
      62:	00 00       	nop
      64:	69 c0       	rjmp	.+210    	; 0x138 <__bad_interrupt>
      66:	00 00       	nop
      68:	67 c0       	rjmp	.+206    	; 0x138 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	65 c0       	rjmp	.+202    	; 0x138 <__bad_interrupt>
      6e:	00 00       	nop
      70:	63 c0       	rjmp	.+198    	; 0x138 <__bad_interrupt>
      72:	00 00       	nop

00000074 <DeviceDescriptor>:
      74:	12 01 10 01 02 00 00 08 eb 03 44 20 01 00 01 02     ..........D ....
      84:	dc 01                                               ..

00000086 <ConfigurationDescriptor>:
      86:	09 02 3e 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..>.....2.......
      96:	01 00 05 24 00 10 01 04 24 02 06 05 24 06 00 01     ...$....$...$...
      a6:	07 05 82 03 08 00 ff 09 04 01 00 02 0a 00 00 00     ................
      b6:	07 05 04 02 10 00 05 07 05 83 02 10 00 05           ..............

000000c4 <LanguageString>:
      c4:	04 03 09 04                                         ....

000000c8 <ManufacturerString>:
      c8:	18 03 44 00 65 00 61 00 6e 00 20 00 43 00 61 00     ..D.e.a.n. .C.a.
      d8:	6d 00 65 00 72 00 61 00 00 00                       m.e.r.a...

000000e2 <ProductString>:
      e2:	1c 03 4c 00 55 00 46 00 41 00 20 00 43 00 44 00     ..L.U.F.A. .C.D.
      f2:	43 00 20 00 44 00 65 00 6d 00 6f 00 00 00           C. .D.e.m.o...

00000100 <__ctors_end>:
     100:	11 24       	eor	r1, r1
     102:	1f be       	out	0x3f, r1	; 63
     104:	cf ef       	ldi	r28, 0xFF	; 255
     106:	d2 e0       	ldi	r29, 0x02	; 2
     108:	de bf       	out	0x3e, r29	; 62
     10a:	cd bf       	out	0x3d, r28	; 61

0000010c <__do_copy_data>:
     10c:	11 e0       	ldi	r17, 0x01	; 1
     10e:	a0 e0       	ldi	r26, 0x00	; 0
     110:	b1 e0       	ldi	r27, 0x01	; 1
     112:	e2 e1       	ldi	r30, 0x12	; 18
     114:	f4 e1       	ldi	r31, 0x14	; 20
     116:	02 c0       	rjmp	.+4      	; 0x11c <.do_copy_data_start>

00000118 <.do_copy_data_loop>:
     118:	05 90       	lpm	r0, Z+
     11a:	0d 92       	st	X+, r0

0000011c <.do_copy_data_start>:
     11c:	aa 35       	cpi	r26, 0x5A	; 90
     11e:	b1 07       	cpc	r27, r17
     120:	d9 f7       	brne	.-10     	; 0x118 <.do_copy_data_loop>

00000122 <__do_clear_bss>:
     122:	12 e0       	ldi	r17, 0x02	; 2
     124:	aa e5       	ldi	r26, 0x5A	; 90
     126:	b1 e0       	ldi	r27, 0x01	; 1
     128:	01 c0       	rjmp	.+2      	; 0x12c <.do_clear_bss_start>

0000012a <.do_clear_bss_loop>:
     12a:	1d 92       	st	X+, r1

0000012c <.do_clear_bss_start>:
     12c:	a3 34       	cpi	r26, 0x43	; 67
     12e:	b1 07       	cpc	r27, r17
     130:	e1 f7       	brne	.-8      	; 0x12a <.do_clear_bss_loop>
     132:	05 d2       	rcall	.+1034   	; 0x53e <main>
     134:	0c 94 07 0a 	jmp	0x140e	; 0x140e <_exit>

00000138 <__bad_interrupt>:
     138:	63 cf       	rjmp	.-314    	; 0x0 <__vectors>

0000013a <uart_put>:
					},
			},
	};
	
void uart_put( unsigned char data )
{
     13a:	98 2f       	mov	r25, r24
	 while(!(UCSR1A & (1<<UDRE1)));
     13c:	80 91 c8 00 	lds	r24, 0x00C8
     140:	85 ff       	sbrs	r24, 5
     142:	fc cf       	rjmp	.-8      	; 0x13c <uart_put+0x2>
		UDR1=data;		        
     144:	90 93 ce 00 	sts	0x00CE, r25
}
     148:	08 95       	ret

0000014a <uart_puts>:

void uart_puts(const char *s )
{
     14a:	cf 93       	push	r28
     14c:	df 93       	push	r29
     14e:	ec 01       	movw	r28, r24
     150:	02 c0       	rjmp	.+4      	; 0x156 <uart_puts+0xc>
    while (*s)
      uart_put(*s++);
     152:	21 96       	adiw	r28, 0x01	; 1
     154:	f2 df       	rcall	.-28     	; 0x13a <uart_put>
		UDR1=data;		        
}

void uart_puts(const char *s )
{
    while (*s)
     156:	88 81       	ld	r24, Y
     158:	88 23       	and	r24, r24
     15a:	d9 f7       	brne	.-10     	; 0x152 <uart_puts+0x8>
      uart_put(*s++);
}
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	08 95       	ret

00000162 <__vector_19>:
volatile static bool bDebug = false;
volatile int16_t iRead = 0;

static volatile int8_t tim_cnter = 0;
ISR(TIMER0_COMPA_vect)
{
     162:	1f 92       	push	r1
     164:	0f 92       	push	r0
     166:	0f b6       	in	r0, 0x3f	; 63
     168:	0f 92       	push	r0
     16a:	11 24       	eor	r1, r1
     16c:	8f 93       	push	r24
     16e:	9f 93       	push	r25
	tim_cnter++;
     170:	80 91 5f 01 	lds	r24, 0x015F
     174:	8f 5f       	subi	r24, 0xFF	; 255
     176:	80 93 5f 01 	sts	0x015F, r24
	if(tim_cnter > 100)
     17a:	80 91 5f 01 	lds	r24, 0x015F
     17e:	85 36       	cpi	r24, 0x65	; 101
     180:	34 f0       	brlt	.+12     	; 0x18e <__vector_19+0x2c>
	{
		PORTB ^= (1 << PB6);
     182:	85 b1       	in	r24, 0x05	; 5
     184:	90 e4       	ldi	r25, 0x40	; 64
     186:	89 27       	eor	r24, r25
     188:	85 b9       	out	0x05, r24	; 5
		tim_cnter = 0;
     18a:	10 92 5f 01 	sts	0x015F, r1
	}
}
     18e:	9f 91       	pop	r25
     190:	8f 91       	pop	r24
     192:	0f 90       	pop	r0
     194:	0f be       	out	0x3f, r0	; 63
     196:	0f 90       	pop	r0
     198:	1f 90       	pop	r1
     19a:	18 95       	reti

0000019c <__vector_2>:

ISR(INT1_vect)
{
     19c:	1f 92       	push	r1
     19e:	0f 92       	push	r0
     1a0:	0f b6       	in	r0, 0x3f	; 63
     1a2:	0f 92       	push	r0
     1a4:	11 24       	eor	r1, r1
     1a6:	2f 93       	push	r18
     1a8:	3f 93       	push	r19
     1aa:	4f 93       	push	r20
     1ac:	5f 93       	push	r21
     1ae:	6f 93       	push	r22
     1b0:	7f 93       	push	r23
     1b2:	8f 93       	push	r24
     1b4:	9f 93       	push	r25
     1b6:	af 93       	push	r26
     1b8:	bf 93       	push	r27
     1ba:	ef 93       	push	r30
     1bc:	ff 93       	push	r31
	uart_puts("ATI\r");
     1be:	80 e0       	ldi	r24, 0x00	; 0
     1c0:	91 e0       	ldi	r25, 0x01	; 1
     1c2:	c3 df       	rcall	.-122    	; 0x14a <uart_puts>
}
     1c4:	ff 91       	pop	r31
     1c6:	ef 91       	pop	r30
     1c8:	bf 91       	pop	r27
     1ca:	af 91       	pop	r26
     1cc:	9f 91       	pop	r25
     1ce:	8f 91       	pop	r24
     1d0:	7f 91       	pop	r23
     1d2:	6f 91       	pop	r22
     1d4:	5f 91       	pop	r21
     1d6:	4f 91       	pop	r20
     1d8:	3f 91       	pop	r19
     1da:	2f 91       	pop	r18
     1dc:	0f 90       	pop	r0
     1de:	0f be       	out	0x3f, r0	; 63
     1e0:	0f 90       	pop	r0
     1e2:	1f 90       	pop	r1
     1e4:	18 95       	reti

000001e6 <openGate>:

void openGate()
{
	PORTC |= (1 << PC7);
     1e6:	47 9a       	sbi	0x08, 7	; 8
     1e8:	80 e3       	ldi	r24, 0x30	; 48
     1ea:	95 e7       	ldi	r25, 0x75	; 117
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1ec:	28 ec       	ldi	r18, 0xC8	; 200
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	f9 01       	movw	r30, r18
     1f2:	31 97       	sbiw	r30, 0x01	; 1
     1f4:	f1 f7       	brne	.-4      	; 0x1f2 <openGate+0xc>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1f6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1f8:	d9 f7       	brne	.-10     	; 0x1f0 <openGate+0xa>
	_delay_ms(3000);
	PORTC &= ~(1 << PC7);
     1fa:	47 98       	cbi	0x08, 7	; 8
}
     1fc:	08 95       	ret

000001fe <stringCheck>:
}

static volatile int8_t stringBuffer[100];
static volatile int8_t stringCnter = 0;
unsigned char stringCheck(char *s)
{
     1fe:	dc 01       	movw	r26, r24
	int i = 1;
	
	while(*s != phoneBuffer[i])
     200:	8c 91       	ld	r24, X
     202:	28 2f       	mov	r18, r24
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	41 e0       	ldi	r20, 0x01	; 1
     208:	50 e0       	ldi	r21, 0x00	; 0
     20a:	0b c0       	rjmp	.+22     	; 0x222 <stringCheck+0x24>
	{
		i++;
     20c:	4f 5f       	subi	r20, 0xFF	; 255
     20e:	5f 4f       	sbci	r21, 0xFF	; 255
		if(i > bufferLength-1)
     210:	80 91 58 01 	lds	r24, 0x0158
     214:	99 27       	eor	r25, r25
     216:	87 fd       	sbrc	r24, 7
     218:	90 95       	com	r25
     21a:	48 17       	cp	r20, r24
     21c:	59 07       	cpc	r21, r25
     21e:	0c f0       	brlt	.+2      	; 0x222 <stringCheck+0x24>
     220:	45 c0       	rjmp	.+138    	; 0x2ac <stringCheck+0xae>
static volatile int8_t stringCnter = 0;
unsigned char stringCheck(char *s)
{
	int i = 1;
	
	while(*s != phoneBuffer[i])
     222:	fa 01       	movw	r30, r20
     224:	e2 59       	subi	r30, 0x92	; 146
     226:	fe 4f       	sbci	r31, 0xFE	; 254
     228:	80 81       	ld	r24, Z
     22a:	99 27       	eor	r25, r25
     22c:	87 fd       	sbrc	r24, 7
     22e:	90 95       	com	r25
     230:	28 17       	cp	r18, r24
     232:	39 07       	cpc	r19, r25
     234:	59 f7       	brne	.-42     	; 0x20c <stringCheck+0xe>
     236:	16 c0       	rjmp	.+44     	; 0x264 <stringCheck+0x66>
			return 0;
	}
	while (*s)
	{		
			
		if(phoneBuffer[i] != *s++)
     238:	fa 01       	movw	r30, r20
     23a:	e2 59       	subi	r30, 0x92	; 146
     23c:	fe 4f       	sbci	r31, 0xFE	; 254
     23e:	80 81       	ld	r24, Z
     240:	99 27       	eor	r25, r25
     242:	87 fd       	sbrc	r24, 7
     244:	90 95       	com	r25
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	82 17       	cp	r24, r18
     24a:	93 07       	cpc	r25, r19
     24c:	79 f5       	brne	.+94     	; 0x2ac <stringCheck+0xae>
			return 0;
		i++;			
     24e:	4f 5f       	subi	r20, 0xFF	; 255
     250:	5f 4f       	sbci	r21, 0xFF	; 255
		
		if(i > bufferLength-1)
     252:	80 91 58 01 	lds	r24, 0x0158
     256:	99 27       	eor	r25, r25
     258:	87 fd       	sbrc	r24, 7
     25a:	90 95       	com	r25
     25c:	48 17       	cp	r20, r24
     25e:	59 07       	cpc	r21, r25
     260:	2c f5       	brge	.+74     	; 0x2ac <stringCheck+0xae>
			return 0;
	}
	while (*s)
	{		
			
		if(phoneBuffer[i] != *s++)
     262:	11 96       	adiw	r26, 0x01	; 1
	{
		i++;
		if(i > bufferLength-1)
			return 0;
	}
	while (*s)
     264:	2c 91       	ld	r18, X
     266:	22 23       	and	r18, r18
     268:	39 f7       	brne	.-50     	; 0x238 <stringCheck+0x3a>
		
		if(i > bufferLength-1)
			return 0;
	}
	
	stringCnter = 0;
     26a:	10 92 5e 01 	sts	0x015E, r1
     26e:	13 c0       	rjmp	.+38     	; 0x296 <stringCheck+0x98>
	while(i < bufferLength -1)
	{
		stringBuffer[stringCnter] = phoneBuffer[i];
     270:	e0 91 5e 01 	lds	r30, 0x015E
     274:	ff 27       	eor	r31, r31
     276:	e7 fd       	sbrc	r30, 7
     278:	f0 95       	com	r31
     27a:	da 01       	movw	r26, r20
     27c:	a2 59       	subi	r26, 0x92	; 146
     27e:	be 4f       	sbci	r27, 0xFE	; 254
     280:	8c 91       	ld	r24, X
     282:	ee 52       	subi	r30, 0x2E	; 46
     284:	fe 4f       	sbci	r31, 0xFE	; 254
     286:	80 83       	st	Z, r24
		stringCnter++;
     288:	80 91 5e 01 	lds	r24, 0x015E
     28c:	8f 5f       	subi	r24, 0xFF	; 255
     28e:	80 93 5e 01 	sts	0x015E, r24
		i++;
     292:	4f 5f       	subi	r20, 0xFF	; 255
     294:	5f 4f       	sbci	r21, 0xFF	; 255
		if(i > bufferLength-1)
			return 0;
	}
	
	stringCnter = 0;
	while(i < bufferLength -1)
     296:	80 91 58 01 	lds	r24, 0x0158
     29a:	99 27       	eor	r25, r25
     29c:	87 fd       	sbrc	r24, 7
     29e:	90 95       	com	r25
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	48 17       	cp	r20, r24
     2a4:	59 07       	cpc	r21, r25
     2a6:	24 f3       	brlt	.-56     	; 0x270 <stringCheck+0x72>
     2a8:	81 e0       	ldi	r24, 0x01	; 1
     2aa:	08 95       	ret
     2ac:	80 e0       	ldi	r24, 0x00	; 0
		stringCnter++;
		i++;
	}
	
	return 1;
}
     2ae:	08 95       	ret

000002b0 <findRinBuff>:

unsigned char findRinBuff()
{

	if(bufferLength < 2)
     2b0:	80 91 58 01 	lds	r24, 0x0158
     2b4:	82 30       	cpi	r24, 0x02	; 2
     2b6:	94 f0       	brlt	.+36     	; 0x2dc <findRinBuff+0x2c>
     2b8:	22 e0       	ldi	r18, 0x02	; 2
     2ba:	06 c0       	rjmp	.+12     	; 0x2c8 <findRinBuff+0x18>
		return 0;
		
	for(unsigned char i = 2; i < bufferLength; i++)
	{
		if(phoneBuffer[i] == 0x0D)
     2bc:	e2 59       	subi	r30, 0x92	; 146
     2be:	fe 4f       	sbci	r31, 0xFE	; 254
     2c0:	80 81       	ld	r24, Z
     2c2:	8d 30       	cpi	r24, 0x0D	; 13
     2c4:	61 f0       	breq	.+24     	; 0x2de <findRinBuff+0x2e>
{

	if(bufferLength < 2)
		return 0;
		
	for(unsigned char i = 2; i < bufferLength; i++)
     2c6:	2f 5f       	subi	r18, 0xFF	; 255
     2c8:	e2 2f       	mov	r30, r18
     2ca:	f0 e0       	ldi	r31, 0x00	; 0
     2cc:	80 91 58 01 	lds	r24, 0x0158
     2d0:	99 27       	eor	r25, r25
     2d2:	87 fd       	sbrc	r24, 7
     2d4:	90 95       	com	r25
     2d6:	e8 17       	cp	r30, r24
     2d8:	f9 07       	cpc	r31, r25
     2da:	84 f3       	brlt	.-32     	; 0x2bc <findRinBuff+0xc>
     2dc:	20 e0       	ldi	r18, 0x00	; 0
			return i;
	}
	
	return 0;

}
     2de:	82 2f       	mov	r24, r18
     2e0:	08 95       	ret

000002e2 <bufferCheck>:

void bufferCheck()
{

	if(bufferLength > 1 && phoneBuffer[1] != 0x0D)
     2e2:	80 91 58 01 	lds	r24, 0x0158
     2e6:	82 30       	cpi	r24, 0x02	; 2
     2e8:	3c f0       	brlt	.+14     	; 0x2f8 <bufferCheck+0x16>
     2ea:	80 91 6f 01 	lds	r24, 0x016F
     2ee:	8d 30       	cpi	r24, 0x0D	; 13
     2f0:	19 f0       	breq	.+6      	; 0x2f8 <bufferCheck+0x16>
		bufferLength = 1;
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	80 93 58 01 	sts	0x0158, r24

	if(findRinBuff() > 0)
     2f8:	db df       	rcall	.-74     	; 0x2b0 <findRinBuff>
     2fa:	88 23       	and	r24, r24
     2fc:	09 f1       	breq	.+66     	; 0x340 <__stack+0x41>
	{
		if(stringCheck("RING") == 1)
     2fe:	85 e0       	ldi	r24, 0x05	; 5
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	7d df       	rcall	.-262    	; 0x1fe <stringCheck>
     304:	81 30       	cpi	r24, 0x01	; 1
     306:	61 f4       	brne	.+24     	; 0x320 <__stack+0x21>
		{
			uart_puts("ATH\r");
     308:	8a e0       	ldi	r24, 0x0A	; 10
     30a:	91 e0       	ldi	r25, 0x01	; 1
     30c:	1e df       	rcall	.-452    	; 0x14a <uart_puts>
     30e:	88 e8       	ldi	r24, 0x88	; 136
     310:	93 e1       	ldi	r25, 0x13	; 19
     312:	28 ec       	ldi	r18, 0xC8	; 200
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	f9 01       	movw	r30, r18
     318:	31 97       	sbiw	r30, 0x01	; 1
     31a:	f1 f7       	brne	.-4      	; 0x318 <__stack+0x19>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     31c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     31e:	d9 f7       	brne	.-10     	; 0x316 <__stack+0x17>
			_delay_ms(500);
		}
		
		if(stringCheck("+CLCC: 1,1,6,") == 1)
     320:	8f e0       	ldi	r24, 0x0F	; 15
     322:	91 e0       	ldi	r25, 0x01	; 1
     324:	6c df       	rcall	.-296    	; 0x1fe <stringCheck>
     326:	81 30       	cpi	r24, 0x01	; 1
     328:	41 f4       	brne	.+16     	; 0x33a <__stack+0x3b>
		{	
		
			if(!(PINC && (1 << PC2)) || stringBuffer[21] != '"') // jeśli jest wpisany opis albo tryb wpuszczaj wszystkich
     32a:	86 b1       	in	r24, 0x06	; 6
     32c:	88 23       	and	r24, r24
     32e:	21 f0       	breq	.+8      	; 0x338 <__stack+0x39>
     330:	80 91 e7 01 	lds	r24, 0x01E7
     334:	82 32       	cpi	r24, 0x22	; 34
     336:	09 f0       	breq	.+2      	; 0x33a <__stack+0x3b>
			{
				openGate();
     338:	56 df       	rcall	.-340    	; 0x1e6 <openGate>
			}
			
		}
		
		bufferLength = 1;
     33a:	81 e0       	ldi	r24, 0x01	; 1
     33c:	80 93 58 01 	sts	0x0158, r24
     340:	08 95       	ret

00000342 <USARTInit>:
}


void USARTInit(unsigned int ubrr_value)
{
   UCSR1A |= (1 << U2X1);
     342:	e8 ec       	ldi	r30, 0xC8	; 200
     344:	f0 e0       	ldi	r31, 0x00	; 0
     346:	20 81       	ld	r18, Z
     348:	22 60       	ori	r18, 0x02	; 2
     34a:	20 83       	st	Z, r18
   UCSR1B |= (1 << RXEN1) | (1 << TXEN1) | (1 << RXCIE1);
     34c:	e9 ec       	ldi	r30, 0xC9	; 201
     34e:	f0 e0       	ldi	r31, 0x00	; 0
     350:	20 81       	ld	r18, Z
     352:	28 69       	ori	r18, 0x98	; 152
     354:	20 83       	st	Z, r18
   UCSR1C |= (1 << UCSZ11) | (1 << UCSZ10);
     356:	ea ec       	ldi	r30, 0xCA	; 202
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	20 81       	ld	r18, Z
     35c:	26 60       	ori	r18, 0x06	; 6
     35e:	20 83       	st	Z, r18
   UBRR1 = ubrr_value;
     360:	90 93 cd 00 	sts	0x00CD, r25
     364:	80 93 cc 00 	sts	0x00CC, r24
   DDRD |= (1 << PD3);
     368:	53 9a       	sbi	0x0a, 3	; 10
}
     36a:	08 95       	ret

0000036c <EVENT_USB_Device_Connect>:
}

void EVENT_USB_Device_Connect(void)
{

}
     36c:	08 95       	ret

0000036e <EVENT_USB_Device_Disconnect>:

void EVENT_USB_Device_Disconnect(void)
{

}
     36e:	08 95       	ret

00000370 <EVENT_USB_Device_ControlRequest>:
	ConfigSuccess &= CDC_Device_ConfigureEndpoints(&VirtualSerial_CDC_Interface);
}

void EVENT_USB_Device_ControlRequest(void)
{
	CDC_Device_ProcessControlRequest(&VirtualSerial_CDC_Interface);
     370:	8c e3       	ldi	r24, 0x3C	; 60
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	f3 c6       	rjmp	.+3558   	; 0x115c <CDC_Device_ProcessControlRequest>

00000376 <EVENT_USB_Device_ConfigurationChanged>:
{

}

void EVENT_USB_Device_ConfigurationChanged(void)
{
     376:	0f 93       	push	r16
     378:	1f 93       	push	r17
	ConfigSuccess &= CDC_Device_ConfigureEndpoints(&VirtualSerial_CDC_Interface);
     37a:	00 91 57 01 	lds	r16, 0x0157
     37e:	8c e3       	ldi	r24, 0x3C	; 60
     380:	91 e0       	ldi	r25, 0x01	; 1
     382:	c5 d6       	rcall	.+3466   	; 0x110e <CDC_Device_ConfigureEndpoints>
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	10 e0       	ldi	r17, 0x00	; 0
     38a:	80 23       	and	r24, r16
     38c:	91 23       	and	r25, r17
     38e:	89 2b       	or	r24, r25
     390:	09 f0       	breq	.+2      	; 0x394 <EVENT_USB_Device_ConfigurationChanged+0x1e>
     392:	21 e0       	ldi	r18, 0x01	; 1
     394:	20 93 57 01 	sts	0x0157, r18
}
     398:	1f 91       	pop	r17
     39a:	0f 91       	pop	r16
     39c:	08 95       	ret

0000039e <SetupHardware>:
   DDRD |= (1 << PD3);
}

void SetupHardware(void)
{
	MCUSR &= ~(1 << WDRF);
     39e:	84 b7       	in	r24, 0x34	; 52
     3a0:	87 7f       	andi	r24, 0xF7	; 247
     3a2:	84 bf       	out	0x34, r24	; 52
	wdt_disable();
     3a4:	88 e1       	ldi	r24, 0x18	; 24
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	f8 94       	cli
     3aa:	80 93 60 00 	sts	0x0060, r24
     3ae:	10 92 60 00 	sts	0x0060, r1
     3b2:	0f be       	out	0x3f, r0	; 63
	
	DDRB = (1 << PB5) | (1 << PB6) | (1 << PB4);	
     3b4:	80 e7       	ldi	r24, 0x70	; 112
     3b6:	84 b9       	out	0x04, r24	; 4
	DDRC = (1 << PC7);
     3b8:	80 e8       	ldi	r24, 0x80	; 128
     3ba:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1 << PC2);
     3bc:	42 9a       	sbi	0x08, 2	; 8
	
	
	clock_prescale_set(0);
     3be:	80 e0       	ldi	r24, 0x00	; 0
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	20 e8       	ldi	r18, 0x80	; 128
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	f8 94       	cli
     3c8:	20 93 61 00 	sts	0x0061, r18
     3cc:	80 93 61 00 	sts	0x0061, r24
     3d0:	0f be       	out	0x3f, r0	; 63

	USB_Init();	
     3d2:	68 d3       	rcall	.+1744   	; 0xaa4 <USB_Init>
	USARTInit(25);
     3d4:	89 e1       	ldi	r24, 0x19	; 25
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	b4 df       	rcall	.-152    	; 0x342 <USARTInit>
	
	TCCR0A |= (1 << WGM01);
     3da:	84 b5       	in	r24, 0x24	; 36
     3dc:	82 60       	ori	r24, 0x02	; 2
     3de:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00) | (1 << CS02);
     3e0:	85 b5       	in	r24, 0x25	; 37
     3e2:	85 60       	ori	r24, 0x05	; 5
     3e4:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1 << OCIE0A);
     3e6:	ee e6       	ldi	r30, 0x6E	; 110
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	80 81       	ld	r24, Z
     3ec:	82 60       	ori	r24, 0x02	; 2
     3ee:	80 83       	st	Z, r24
	OCR0A = 255;
     3f0:	8f ef       	ldi	r24, 0xFF	; 255
     3f2:	87 bd       	out	0x27, r24	; 39
	
	DDRD &= ~(1 << PD1);
     3f4:	51 98       	cbi	0x0a, 1	; 10
	EICRA |= (1 << ISC11) | (1 << ISC10);
     3f6:	e9 e6       	ldi	r30, 0x69	; 105
     3f8:	f0 e0       	ldi	r31, 0x00	; 0
     3fa:	80 81       	ld	r24, Z
     3fc:	8c 60       	ori	r24, 0x0C	; 12
     3fe:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1);
     400:	e9 9a       	sbi	0x1d, 1	; 29
	
	DDRC &= ~(1 << PC2);
     402:	3a 98       	cbi	0x07, 2	; 7
	PORTC |= (1 << PC2);
     404:	42 9a       	sbi	0x08, 2	; 8
}
     406:	08 95       	ret

00000408 <__vector_23>:
	PORTC &= ~(1 << PC7);
}


SIGNAL(USART1_RX_vect)
{
     408:	1f 92       	push	r1
     40a:	0f 92       	push	r0
     40c:	0f b6       	in	r0, 0x3f	; 63
     40e:	0f 92       	push	r0
     410:	11 24       	eor	r1, r1
     412:	1f 93       	push	r17
     414:	2f 93       	push	r18
     416:	3f 93       	push	r19
     418:	4f 93       	push	r20
     41a:	5f 93       	push	r21
     41c:	6f 93       	push	r22
     41e:	7f 93       	push	r23
     420:	8f 93       	push	r24
     422:	9f 93       	push	r25
     424:	af 93       	push	r26
     426:	bf 93       	push	r27
     428:	ef 93       	push	r30
     42a:	ff 93       	push	r31
     42c:	df 93       	push	r29
     42e:	cf 93       	push	r28
     430:	00 d0       	rcall	.+0      	; 0x432 <__vector_23+0x2a>
     432:	cd b7       	in	r28, 0x3d	; 61
     434:	de b7       	in	r29, 0x3e	; 62
	int8_t c = UDR1;
     436:	10 91 ce 00 	lds	r17, 0x00CE
	int16_t c2 = c;
	if(ConfigSuccess && bDebug)
     43a:	80 91 57 01 	lds	r24, 0x0157
     43e:	88 23       	and	r24, r24
     440:	79 f0       	breq	.+30     	; 0x460 <__vector_23+0x58>
     442:	80 91 5d 01 	lds	r24, 0x015D
     446:	88 23       	and	r24, r24
     448:	59 f0       	breq	.+22     	; 0x460 <__vector_23+0x58>


SIGNAL(USART1_RX_vect)
{
	int8_t c = UDR1;
	int16_t c2 = c;
     44a:	81 2f       	mov	r24, r17
     44c:	99 27       	eor	r25, r25
     44e:	87 fd       	sbrc	r24, 7
     450:	90 95       	com	r25
     452:	9a 83       	std	Y+2, r25	; 0x02
     454:	89 83       	std	Y+1, r24	; 0x01
	if(ConfigSuccess && bDebug)
		fputs(&c2, &USBSerialStream); // do debugu
     456:	ce 01       	movw	r24, r28
     458:	01 96       	adiw	r24, 0x01	; 1
     45a:	60 e6       	ldi	r22, 0x60	; 96
     45c:	71 e0       	ldi	r23, 0x01	; 1
     45e:	4a d7       	rcall	.+3732   	; 0x12f4 <fputs>
	
		
	if((bufferLength == 1 && c != 0x0D) || bufferLength > 98)
     460:	80 91 58 01 	lds	r24, 0x0158
     464:	81 30       	cpi	r24, 0x01	; 1
     466:	11 f4       	brne	.+4      	; 0x46c <__vector_23+0x64>
     468:	1d 30       	cpi	r17, 0x0D	; 13
     46a:	89 f4       	brne	.+34     	; 0x48e <__vector_23+0x86>
     46c:	80 91 58 01 	lds	r24, 0x0158
     470:	83 36       	cpi	r24, 0x63	; 99
     472:	6c f4       	brge	.+26     	; 0x48e <__vector_23+0x86>
		return;
	
	phoneBuffer[bufferLength] = c;
     474:	e0 91 58 01 	lds	r30, 0x0158
     478:	ff 27       	eor	r31, r31
     47a:	e7 fd       	sbrc	r30, 7
     47c:	f0 95       	com	r31
     47e:	e2 59       	subi	r30, 0x92	; 146
     480:	fe 4f       	sbci	r31, 0xFE	; 254
     482:	10 83       	st	Z, r17
	bufferLength++;		
     484:	80 91 58 01 	lds	r24, 0x0158
     488:	8f 5f       	subi	r24, 0xFF	; 255
     48a:	80 93 58 01 	sts	0x0158, r24
}
     48e:	0f 90       	pop	r0
     490:	0f 90       	pop	r0
     492:	cf 91       	pop	r28
     494:	df 91       	pop	r29
     496:	ff 91       	pop	r31
     498:	ef 91       	pop	r30
     49a:	bf 91       	pop	r27
     49c:	af 91       	pop	r26
     49e:	9f 91       	pop	r25
     4a0:	8f 91       	pop	r24
     4a2:	7f 91       	pop	r23
     4a4:	6f 91       	pop	r22
     4a6:	5f 91       	pop	r21
     4a8:	4f 91       	pop	r20
     4aa:	3f 91       	pop	r19
     4ac:	2f 91       	pop	r18
     4ae:	1f 91       	pop	r17
     4b0:	0f 90       	pop	r0
     4b2:	0f be       	out	0x3f, r0	; 63
     4b4:	0f 90       	pop	r0
     4b6:	1f 90       	pop	r1
     4b8:	18 95       	reti

000004ba <pb_clear>:
		bufferLength = 1;
	}
}

void pb_clear(int from, int to)
{
     4ba:	af 92       	push	r10
     4bc:	bf 92       	push	r11
     4be:	cf 92       	push	r12
     4c0:	df 92       	push	r13
     4c2:	ef 92       	push	r14
     4c4:	ff 92       	push	r15
     4c6:	0f 93       	push	r16
     4c8:	1f 93       	push	r17
     4ca:	df 93       	push	r29
     4cc:	cf 93       	push	r28
     4ce:	00 d0       	rcall	.+0      	; 0x4d0 <pb_clear+0x16>
     4d0:	00 d0       	rcall	.+0      	; 0x4d2 <pb_clear+0x18>
     4d2:	0f 92       	push	r0
     4d4:	cd b7       	in	r28, 0x3d	; 61
     4d6:	de b7       	in	r29, 0x3e	; 62
     4d8:	6b 01       	movw	r12, r22
     4da:	8c 01       	movw	r16, r24
	for (int i = from; i < to+1; i++)
	{
		char buffer[5];
		uart_puts("AT+CPBW=");
		itoa(i, buffer, 10);
     4dc:	7e 01       	movw	r14, r28
     4de:	08 94       	sec
     4e0:	e1 1c       	adc	r14, r1
     4e2:	f1 1c       	adc	r15, r1
     4e4:	88 ec       	ldi	r24, 0xC8	; 200
     4e6:	a8 2e       	mov	r10, r24
     4e8:	b1 2c       	mov	r11, r1
     4ea:	16 c0       	rjmp	.+44     	; 0x518 <pb_clear+0x5e>
void pb_clear(int from, int to)
{
	for (int i = from; i < to+1; i++)
	{
		char buffer[5];
		uart_puts("AT+CPBW=");
     4ec:	8d e1       	ldi	r24, 0x1D	; 29
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	2c de       	rcall	.-936    	; 0x14a <uart_puts>
		itoa(i, buffer, 10);
     4f2:	c8 01       	movw	r24, r16
     4f4:	b7 01       	movw	r22, r14
     4f6:	4a e0       	ldi	r20, 0x0A	; 10
     4f8:	50 e0       	ldi	r21, 0x00	; 0
     4fa:	dd d6       	rcall	.+3514   	; 0x12b6 <itoa>
		uart_puts(buffer);
     4fc:	c7 01       	movw	r24, r14
     4fe:	25 de       	rcall	.-950    	; 0x14a <uart_puts>
		uart_puts("\r");
     500:	86 e2       	ldi	r24, 0x26	; 38
     502:	91 e0       	ldi	r25, 0x01	; 1
     504:	22 de       	rcall	.-956    	; 0x14a <uart_puts>
     506:	88 eb       	ldi	r24, 0xB8	; 184
     508:	9b e0       	ldi	r25, 0x0B	; 11
     50a:	f5 01       	movw	r30, r10
     50c:	31 97       	sbiw	r30, 0x01	; 1
     50e:	f1 f7       	brne	.-4      	; 0x50c <pb_clear+0x52>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     510:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     512:	d9 f7       	brne	.-10     	; 0x50a <pb_clear+0x50>
	}
}

void pb_clear(int from, int to)
{
	for (int i = from; i < to+1; i++)
     514:	0f 5f       	subi	r16, 0xFF	; 255
     516:	1f 4f       	sbci	r17, 0xFF	; 255
     518:	c0 16       	cp	r12, r16
     51a:	d1 06       	cpc	r13, r17
     51c:	3c f7       	brge	.-50     	; 0x4ec <pb_clear+0x32>
		itoa(i, buffer, 10);
		uart_puts(buffer);
		uart_puts("\r");
		_delay_ms(300);
	}
}
     51e:	0f 90       	pop	r0
     520:	0f 90       	pop	r0
     522:	0f 90       	pop	r0
     524:	0f 90       	pop	r0
     526:	0f 90       	pop	r0
     528:	cf 91       	pop	r28
     52a:	df 91       	pop	r29
     52c:	1f 91       	pop	r17
     52e:	0f 91       	pop	r16
     530:	ff 90       	pop	r15
     532:	ef 90       	pop	r14
     534:	df 90       	pop	r13
     536:	cf 90       	pop	r12
     538:	bf 90       	pop	r11
     53a:	af 90       	pop	r10
     53c:	08 95       	ret

0000053e <main>:


int main(void)
{	
     53e:	bf 92       	push	r11
     540:	cf 92       	push	r12
     542:	df 92       	push	r13
     544:	ef 92       	push	r14
     546:	ff 92       	push	r15
     548:	0f 93       	push	r16
     54a:	1f 93       	push	r17
     54c:	df 93       	push	r29
     54e:	cf 93       	push	r28
     550:	00 d0       	rcall	.+0      	; 0x552 <main+0x14>
     552:	00 d0       	rcall	.+0      	; 0x554 <main+0x16>
     554:	0f 92       	push	r0
     556:	cd b7       	in	r28, 0x3d	; 61
     558:	de b7       	in	r29, 0x3e	; 62
	SetupHardware();    
     55a:	21 df       	rcall	.-446    	; 0x39e <SetupHardware>
	CDC_Device_CreateStream(&VirtualSerial_CDC_Interface, &USBSerialStream);	
     55c:	8c e3       	ldi	r24, 0x3C	; 60
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	60 e6       	ldi	r22, 0x60	; 96
     562:	71 e0       	ldi	r23, 0x01	; 1
     564:	3b d5       	rcall	.+2678   	; 0xfdc <CDC_Device_CreateStream>
			static inline void GlobalInterruptEnable(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				sei();
     566:	78 94       	sei
				__builtin_csrf(AVR32_SR_GM_OFFSET);
				#elif (ARCH == ARCH_XMEGA)
				sei();
				#endif

				GCC_MEMORY_BARRIER();
     568:	80 e5       	ldi	r24, 0x50	; 80
     56a:	93 ec       	ldi	r25, 0xC3	; 195
     56c:	28 ec       	ldi	r18, 0xC8	; 200
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	f9 01       	movw	r30, r18
     572:	31 97       	sbiw	r30, 0x01	; 1
     574:	f1 f7       	brne	.-4      	; 0x572 <main+0x34>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     576:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     578:	d9 f7       	brne	.-10     	; 0x570 <main+0x32>
	GlobalInterruptEnable();
	
	_delay_ms(5000);
	uart_puts("ATI\r");
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	91 e0       	ldi	r25, 0x01	; 1
     57e:	e5 dd       	rcall	.-1078   	; 0x14a <uart_puts>
     580:	88 e8       	ldi	r24, 0x88	; 136
     582:	93 e1       	ldi	r25, 0x13	; 19
     584:	28 ec       	ldi	r18, 0xC8	; 200
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	f9 01       	movw	r30, r18
     58a:	31 97       	sbiw	r30, 0x01	; 1
     58c:	f1 f7       	brne	.-4      	; 0x58a <main+0x4c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     58e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     590:	d9 f7       	brne	.-10     	; 0x588 <main+0x4a>
	_delay_ms(500);

	numbers = eeprom_read_word(( uint16_t *)1);
     592:	81 e0       	ldi	r24, 0x01	; 1
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	d6 d6       	rcall	.+3500   	; 0x1344 <__eerd_word_usb162>
     598:	80 93 5c 01 	sts	0x015C, r24
				
				if(b == 0x1B)
					openGate();
					
				if(b == 'd')
					bDebug = !bDebug;
     59c:	bb 24       	eor	r11, r11
     59e:	b3 94       	inc	r11
				{
					iRead++;
					uart_puts("AT+CPBW=");
					
					char buff[5];
					itoa(iRead, buff, 10);					
     5a0:	7e 01       	movw	r14, r28
     5a2:	08 94       	sec
     5a4:	e1 1c       	adc	r14, r1
     5a6:	f1 1c       	adc	r15, r1
     5a8:	98 ec       	ldi	r25, 0xC8	; 200
     5aa:	c9 2e       	mov	r12, r25
     5ac:	d1 2c       	mov	r13, r1

	numbers = eeprom_read_word(( uint16_t *)1);
	
	for (;;)
	{
		if(ConfigSuccess)
     5ae:	80 91 57 01 	lds	r24, 0x0157
     5b2:	88 23       	and	r24, r24
     5b4:	09 f4       	brne	.+2      	; 0x5b8 <main+0x7a>
     5b6:	82 c0       	rjmp	.+260    	; 0x6bc <main+0x17e>
		{
			int16_t b = CDC_Device_ReceiveByte(&VirtualSerial_CDC_Interface);
     5b8:	8c e3       	ldi	r24, 0x3C	; 60
     5ba:	91 e0       	ldi	r25, 0x01	; 1
     5bc:	e1 d4       	rcall	.+2498   	; 0xf80 <CDC_Device_ReceiveByte>
     5be:	8c 01       	movw	r16, r24
			
			if(b > -1)
     5c0:	97 fd       	sbrc	r25, 7
     5c2:	78 c0       	rjmp	.+240    	; 0x6b4 <main+0x176>
			{
				if(b == '*')
     5c4:	8a 32       	cpi	r24, 0x2A	; 42
     5c6:	91 05       	cpc	r25, r1
     5c8:	29 f4       	brne	.+10     	; 0x5d4 <main+0x96>
				{
					iRead = 0;					
     5ca:	10 92 5b 01 	sts	0x015B, r1
     5ce:	10 92 5a 01 	sts	0x015A, r1
     5d2:	44 c0       	rjmp	.+136    	; 0x65c <main+0x11e>
				}	
				
				if(b == '\r' || b == 0x1A)
     5d4:	8d 30       	cpi	r24, 0x0D	; 13
     5d6:	91 05       	cpc	r25, r1
     5d8:	21 f0       	breq	.+8      	; 0x5e2 <main+0xa4>
     5da:	8a 31       	cpi	r24, 0x1A	; 26
     5dc:	91 05       	cpc	r25, r1
     5de:	09 f0       	breq	.+2      	; 0x5e2 <main+0xa4>
     5e0:	3a c0       	rjmp	.+116    	; 0x656 <main+0x118>
				{
					uart_puts("\",129,\"aa\"\r");
     5e2:	88 e2       	ldi	r24, 0x28	; 40
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	b1 dd       	rcall	.-1182   	; 0x14a <uart_puts>
     5e8:	88 eb       	ldi	r24, 0xB8	; 184
     5ea:	9b e0       	ldi	r25, 0x0B	; 11
     5ec:	f6 01       	movw	r30, r12
     5ee:	31 97       	sbiw	r30, 0x01	; 1
     5f0:	f1 f7       	brne	.-4      	; 0x5ee <main+0xb0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5f2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5f4:	d9 f7       	brne	.-10     	; 0x5ec <main+0xae>
					_delay_ms(300);
					bufferLength = 1;
     5f6:	b0 92 58 01 	sts	0x0158, r11
					
					fputs("ok\r\n", &USBSerialStream);
     5fa:	84 e3       	ldi	r24, 0x34	; 52
     5fc:	91 e0       	ldi	r25, 0x01	; 1
     5fe:	60 e6       	ldi	r22, 0x60	; 96
     600:	71 e0       	ldi	r23, 0x01	; 1
     602:	78 d6       	rcall	.+3312   	; 0x12f4 <fputs>
				}
				
				if(b == 0x1A)
     604:	0a 31       	cpi	r16, 0x1A	; 26
     606:	11 05       	cpc	r17, r1
     608:	31 f5       	brne	.+76     	; 0x656 <main+0x118>
				{
					if(numbers > iRead)
     60a:	80 91 5c 01 	lds	r24, 0x015C
     60e:	20 91 5a 01 	lds	r18, 0x015A
     612:	30 91 5b 01 	lds	r19, 0x015B
     616:	99 27       	eor	r25, r25
     618:	87 fd       	sbrc	r24, 7
     61a:	90 95       	com	r25
     61c:	28 17       	cp	r18, r24
     61e:	39 07       	cpc	r19, r25
     620:	5c f4       	brge	.+22     	; 0x638 <main+0xfa>
						pb_clear(iRead +1, numbers);
     622:	80 91 5a 01 	lds	r24, 0x015A
     626:	90 91 5b 01 	lds	r25, 0x015B
     62a:	60 91 5c 01 	lds	r22, 0x015C
     62e:	77 27       	eor	r23, r23
     630:	67 fd       	sbrc	r22, 7
     632:	70 95       	com	r23
     634:	01 96       	adiw	r24, 0x01	; 1
     636:	41 df       	rcall	.-382    	; 0x4ba <pb_clear>
					
					numbers = iRead;
     638:	80 91 5a 01 	lds	r24, 0x015A
     63c:	90 91 5b 01 	lds	r25, 0x015B
     640:	80 93 5c 01 	sts	0x015C, r24
					eeprom_write_word((uint16_t*)1, (uint16_t)numbers);
     644:	60 91 5c 01 	lds	r22, 0x015C
     648:	77 27       	eor	r23, r23
     64a:	67 fd       	sbrc	r22, 7
     64c:	70 95       	com	r23
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	7d d6       	rcall	.+3322   	; 0x134e <__eewr_word_usb162>
     654:	1c c0       	rjmp	.+56     	; 0x68e <main+0x150>
				}		
								
				if(b == '*' || b == '\r')
     656:	0d 30       	cpi	r16, 0x0D	; 13
     658:	11 05       	cpc	r17, r1
     65a:	c9 f4       	brne	.+50     	; 0x68e <main+0x150>
				{
					iRead++;
     65c:	80 91 5a 01 	lds	r24, 0x015A
     660:	90 91 5b 01 	lds	r25, 0x015B
     664:	01 96       	adiw	r24, 0x01	; 1
     666:	90 93 5b 01 	sts	0x015B, r25
     66a:	80 93 5a 01 	sts	0x015A, r24
					uart_puts("AT+CPBW=");
     66e:	8d e1       	ldi	r24, 0x1D	; 29
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	6b dd       	rcall	.-1322   	; 0x14a <uart_puts>
					
					char buff[5];
					itoa(iRead, buff, 10);					
     674:	80 91 5a 01 	lds	r24, 0x015A
     678:	90 91 5b 01 	lds	r25, 0x015B
     67c:	b7 01       	movw	r22, r14
     67e:	4a e0       	ldi	r20, 0x0A	; 10
     680:	50 e0       	ldi	r21, 0x00	; 0
     682:	19 d6       	rcall	.+3122   	; 0x12b6 <itoa>
					uart_puts(buff);						
     684:	c7 01       	movw	r24, r14
     686:	61 dd       	rcall	.-1342   	; 0x14a <uart_puts>
					uart_puts(",\"");
     688:	89 e3       	ldi	r24, 0x39	; 57
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	5e dd       	rcall	.-1348   	; 0x14a <uart_puts>
				}

				if(b > 47 && b < 58)
     68e:	c8 01       	movw	r24, r16
     690:	c0 97       	sbiw	r24, 0x30	; 48
     692:	0a 97       	sbiw	r24, 0x0a	; 10
     694:	10 f4       	brcc	.+4      	; 0x69a <main+0x15c>
				{
					uart_put(b);			
     696:	80 2f       	mov	r24, r16
     698:	50 dd       	rcall	.-1376   	; 0x13a <uart_put>
				}
				
				if(b == 0x1B)
     69a:	0b 31       	cpi	r16, 0x1B	; 27
     69c:	11 05       	cpc	r17, r1
     69e:	11 f4       	brne	.+4      	; 0x6a4 <main+0x166>
					openGate();
     6a0:	a2 dd       	rcall	.-1212   	; 0x1e6 <openGate>
     6a2:	08 c0       	rjmp	.+16     	; 0x6b4 <main+0x176>
					
				if(b == 'd')
     6a4:	04 36       	cpi	r16, 0x64	; 100
     6a6:	11 05       	cpc	r17, r1
     6a8:	29 f4       	brne	.+10     	; 0x6b4 <main+0x176>
					bDebug = !bDebug;
     6aa:	80 91 5d 01 	lds	r24, 0x015D
     6ae:	8b 25       	eor	r24, r11
     6b0:	80 93 5d 01 	sts	0x015D, r24
									
			}
			
			CDC_Device_USBTask(&VirtualSerial_CDC_Interface);
     6b4:	8c e3       	ldi	r24, 0x3C	; 60
     6b6:	91 e0       	ldi	r25, 0x01	; 1
     6b8:	dd d4       	rcall	.+2490   	; 0x1074 <CDC_Device_USBTask>
			USB_USBTask();
     6ba:	4d d4       	rcall	.+2202   	; 0xf56 <USB_USBTask>
		}
		bufferCheck();
     6bc:	12 de       	rcall	.-988    	; 0x2e2 <bufferCheck>
		
		if(!(PINC && (1 << PC2)))
     6be:	86 b1       	in	r24, 0x06	; 6
     6c0:	88 23       	and	r24, r24
     6c2:	11 f4       	brne	.+4      	; 0x6c8 <main+0x18a>
			PORTB |= (1 << PB5);
     6c4:	2d 9a       	sbi	0x05, 5	; 5
     6c6:	73 cf       	rjmp	.-282    	; 0x5ae <main+0x70>
		else
			PORTB &= ~(1 << PB5);
     6c8:	2d 98       	cbi	0x05, 5	; 5
     6ca:	71 cf       	rjmp	.-286    	; 0x5ae <main+0x70>

000006cc <CALLBACK_USB_GetDescriptor>:
     6cc:	da 01       	movw	r26, r20
     6ce:	92 30       	cpi	r25, 0x02	; 2
     6d0:	49 f0       	breq	.+18     	; 0x6e4 <CALLBACK_USB_GetDescriptor+0x18>
     6d2:	93 30       	cpi	r25, 0x03	; 3
     6d4:	61 f0       	breq	.+24     	; 0x6ee <CALLBACK_USB_GetDescriptor+0x22>
     6d6:	91 30       	cpi	r25, 0x01	; 1
     6d8:	f9 f4       	brne	.+62     	; 0x718 <CALLBACK_USB_GetDescriptor+0x4c>
     6da:	e4 e7       	ldi	r30, 0x74	; 116
     6dc:	f0 e0       	ldi	r31, 0x00	; 0
     6de:	22 e1       	ldi	r18, 0x12	; 18
     6e0:	30 e0       	ldi	r19, 0x00	; 0
     6e2:	1e c0       	rjmp	.+60     	; 0x720 <CALLBACK_USB_GetDescriptor+0x54>
     6e4:	e6 e8       	ldi	r30, 0x86	; 134
     6e6:	f0 e0       	ldi	r31, 0x00	; 0
     6e8:	2e e3       	ldi	r18, 0x3E	; 62
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	19 c0       	rjmp	.+50     	; 0x720 <CALLBACK_USB_GetDescriptor+0x54>
     6ee:	81 30       	cpi	r24, 0x01	; 1
     6f0:	49 f0       	breq	.+18     	; 0x704 <CALLBACK_USB_GetDescriptor+0x38>
     6f2:	81 30       	cpi	r24, 0x01	; 1
     6f4:	18 f0       	brcs	.+6      	; 0x6fc <CALLBACK_USB_GetDescriptor+0x30>
     6f6:	82 30       	cpi	r24, 0x02	; 2
     6f8:	79 f4       	brne	.+30     	; 0x718 <CALLBACK_USB_GetDescriptor+0x4c>
     6fa:	08 c0       	rjmp	.+16     	; 0x70c <CALLBACK_USB_GetDescriptor+0x40>
     6fc:	e4 ec       	ldi	r30, 0xC4	; 196
     6fe:	f0 e0       	ldi	r31, 0x00	; 0
     700:	84 91       	lpm	r24, Z+
     702:	07 c0       	rjmp	.+14     	; 0x712 <CALLBACK_USB_GetDescriptor+0x46>
     704:	e8 ec       	ldi	r30, 0xC8	; 200
     706:	f0 e0       	ldi	r31, 0x00	; 0
     708:	84 91       	lpm	r24, Z+
     70a:	03 c0       	rjmp	.+6      	; 0x712 <CALLBACK_USB_GetDescriptor+0x46>
     70c:	e2 ee       	ldi	r30, 0xE2	; 226
     70e:	f0 e0       	ldi	r31, 0x00	; 0
     710:	84 91       	lpm	r24, Z+
     712:	28 2f       	mov	r18, r24
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	04 c0       	rjmp	.+8      	; 0x720 <CALLBACK_USB_GetDescriptor+0x54>
     718:	e0 e0       	ldi	r30, 0x00	; 0
     71a:	f0 e0       	ldi	r31, 0x00	; 0
     71c:	20 e0       	ldi	r18, 0x00	; 0
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	ed 93       	st	X+, r30
     722:	fc 93       	st	X, r31
     724:	c9 01       	movw	r24, r18
     726:	08 95       	ret

00000728 <Endpoint_Write_Control_Stream_LE>:
     728:	9c 01       	movw	r18, r24
     72a:	40 91 41 02 	lds	r20, 0x0241
     72e:	50 91 42 02 	lds	r21, 0x0242
     732:	46 17       	cp	r20, r22
     734:	57 07       	cpc	r21, r23
     736:	18 f4       	brcc	.+6      	; 0x73e <Endpoint_Write_Control_Stream_LE+0x16>
     738:	f9 01       	movw	r30, r18
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	3d c0       	rjmp	.+122    	; 0x7b8 <Endpoint_Write_Control_Stream_LE+0x90>
     73e:	61 15       	cp	r22, r1
     740:	71 05       	cpc	r23, r1
     742:	11 f0       	breq	.+4      	; 0x748 <Endpoint_Write_Control_Stream_LE+0x20>
     744:	ab 01       	movw	r20, r22
     746:	f8 cf       	rjmp	.-16     	; 0x738 <Endpoint_Write_Control_Stream_LE+0x10>
     748:	80 91 e8 00 	lds	r24, 0x00E8
     74c:	8e 77       	andi	r24, 0x7E	; 126
     74e:	80 93 e8 00 	sts	0x00E8, r24
     752:	40 e0       	ldi	r20, 0x00	; 0
     754:	50 e0       	ldi	r21, 0x00	; 0
     756:	f0 cf       	rjmp	.-32     	; 0x738 <Endpoint_Write_Control_Stream_LE+0x10>
     758:	80 91 3a 02 	lds	r24, 0x023A
     75c:	88 23       	and	r24, r24
     75e:	f1 f1       	breq	.+124    	; 0x7dc <Endpoint_Write_Control_Stream_LE+0xb4>
     760:	85 30       	cpi	r24, 0x05	; 5
     762:	f1 f1       	breq	.+124    	; 0x7e0 <Endpoint_Write_Control_Stream_LE+0xb8>
     764:	80 91 e8 00 	lds	r24, 0x00E8
     768:	83 ff       	sbrs	r24, 3
     76a:	02 c0       	rjmp	.+4      	; 0x770 <Endpoint_Write_Control_Stream_LE+0x48>
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	08 95       	ret
     770:	80 91 e8 00 	lds	r24, 0x00E8
     774:	82 fd       	sbrc	r24, 2
     776:	2c c0       	rjmp	.+88     	; 0x7d0 <Endpoint_Write_Control_Stream_LE+0xa8>
     778:	80 91 e8 00 	lds	r24, 0x00E8
     77c:	80 ff       	sbrs	r24, 0
     77e:	1c c0       	rjmp	.+56     	; 0x7b8 <Endpoint_Write_Control_Stream_LE+0x90>
     780:	80 91 f2 00 	lds	r24, 0x00F2
     784:	28 2f       	mov	r18, r24
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	07 c0       	rjmp	.+14     	; 0x798 <Endpoint_Write_Control_Stream_LE+0x70>
     78a:	81 91       	ld	r24, Z+
     78c:	80 93 f1 00 	sts	0x00F1, r24
     790:	41 50       	subi	r20, 0x01	; 1
     792:	50 40       	sbci	r21, 0x00	; 0
     794:	2f 5f       	subi	r18, 0xFF	; 255
     796:	3f 4f       	sbci	r19, 0xFF	; 255
     798:	41 15       	cp	r20, r1
     79a:	51 05       	cpc	r21, r1
     79c:	19 f0       	breq	.+6      	; 0x7a4 <Endpoint_Write_Control_Stream_LE+0x7c>
     79e:	28 30       	cpi	r18, 0x08	; 8
     7a0:	31 05       	cpc	r19, r1
     7a2:	98 f3       	brcs	.-26     	; 0x78a <Endpoint_Write_Control_Stream_LE+0x62>
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	28 30       	cpi	r18, 0x08	; 8
     7a8:	31 05       	cpc	r19, r1
     7aa:	09 f4       	brne	.+2      	; 0x7ae <Endpoint_Write_Control_Stream_LE+0x86>
     7ac:	91 e0       	ldi	r25, 0x01	; 1
     7ae:	80 91 e8 00 	lds	r24, 0x00E8
     7b2:	8e 77       	andi	r24, 0x7E	; 126
     7b4:	80 93 e8 00 	sts	0x00E8, r24
     7b8:	41 15       	cp	r20, r1
     7ba:	51 05       	cpc	r21, r1
     7bc:	69 f6       	brne	.-102    	; 0x758 <Endpoint_Write_Control_Stream_LE+0x30>
     7be:	99 23       	and	r25, r25
     7c0:	59 f6       	brne	.-106    	; 0x758 <Endpoint_Write_Control_Stream_LE+0x30>
     7c2:	06 c0       	rjmp	.+12     	; 0x7d0 <Endpoint_Write_Control_Stream_LE+0xa8>
     7c4:	80 91 3a 02 	lds	r24, 0x023A
     7c8:	88 23       	and	r24, r24
     7ca:	41 f0       	breq	.+16     	; 0x7dc <Endpoint_Write_Control_Stream_LE+0xb4>
     7cc:	85 30       	cpi	r24, 0x05	; 5
     7ce:	41 f0       	breq	.+16     	; 0x7e0 <Endpoint_Write_Control_Stream_LE+0xb8>
     7d0:	80 91 e8 00 	lds	r24, 0x00E8
     7d4:	82 ff       	sbrs	r24, 2
     7d6:	f6 cf       	rjmp	.-20     	; 0x7c4 <Endpoint_Write_Control_Stream_LE+0x9c>
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	08 95       	ret
     7dc:	82 e0       	ldi	r24, 0x02	; 2
     7de:	08 95       	ret
     7e0:	83 e0       	ldi	r24, 0x03	; 3
     7e2:	08 95       	ret

000007e4 <Endpoint_Write_Control_PStream_LE>:
     7e4:	9c 01       	movw	r18, r24
     7e6:	40 91 41 02 	lds	r20, 0x0241
     7ea:	50 91 42 02 	lds	r21, 0x0242
     7ee:	46 17       	cp	r20, r22
     7f0:	57 07       	cpc	r21, r23
     7f2:	18 f4       	brcc	.+6      	; 0x7fa <Endpoint_Write_Control_PStream_LE+0x16>
     7f4:	f9 01       	movw	r30, r18
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	40 c0       	rjmp	.+128    	; 0x87a <Endpoint_Write_Control_PStream_LE+0x96>
     7fa:	61 15       	cp	r22, r1
     7fc:	71 05       	cpc	r23, r1
     7fe:	11 f0       	breq	.+4      	; 0x804 <Endpoint_Write_Control_PStream_LE+0x20>
     800:	ab 01       	movw	r20, r22
     802:	f8 cf       	rjmp	.-16     	; 0x7f4 <Endpoint_Write_Control_PStream_LE+0x10>
     804:	80 91 e8 00 	lds	r24, 0x00E8
     808:	8e 77       	andi	r24, 0x7E	; 126
     80a:	80 93 e8 00 	sts	0x00E8, r24
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	50 e0       	ldi	r21, 0x00	; 0
     812:	f0 cf       	rjmp	.-32     	; 0x7f4 <Endpoint_Write_Control_PStream_LE+0x10>
     814:	80 91 3a 02 	lds	r24, 0x023A
     818:	88 23       	and	r24, r24
     81a:	09 f4       	brne	.+2      	; 0x81e <Endpoint_Write_Control_PStream_LE+0x3a>
     81c:	40 c0       	rjmp	.+128    	; 0x89e <Endpoint_Write_Control_PStream_LE+0xba>
     81e:	85 30       	cpi	r24, 0x05	; 5
     820:	09 f4       	brne	.+2      	; 0x824 <Endpoint_Write_Control_PStream_LE+0x40>
     822:	3f c0       	rjmp	.+126    	; 0x8a2 <Endpoint_Write_Control_PStream_LE+0xbe>
     824:	80 91 e8 00 	lds	r24, 0x00E8
     828:	83 ff       	sbrs	r24, 3
     82a:	02 c0       	rjmp	.+4      	; 0x830 <Endpoint_Write_Control_PStream_LE+0x4c>
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	08 95       	ret
     830:	80 91 e8 00 	lds	r24, 0x00E8
     834:	82 fd       	sbrc	r24, 2
     836:	2d c0       	rjmp	.+90     	; 0x892 <Endpoint_Write_Control_PStream_LE+0xae>
     838:	80 91 e8 00 	lds	r24, 0x00E8
     83c:	80 ff       	sbrs	r24, 0
     83e:	1d c0       	rjmp	.+58     	; 0x87a <Endpoint_Write_Control_PStream_LE+0x96>
     840:	80 91 f2 00 	lds	r24, 0x00F2
     844:	28 2f       	mov	r18, r24
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	08 c0       	rjmp	.+16     	; 0x85a <Endpoint_Write_Control_PStream_LE+0x76>
     84a:	84 91       	lpm	r24, Z+
     84c:	80 93 f1 00 	sts	0x00F1, r24
     850:	31 96       	adiw	r30, 0x01	; 1
     852:	41 50       	subi	r20, 0x01	; 1
     854:	50 40       	sbci	r21, 0x00	; 0
     856:	2f 5f       	subi	r18, 0xFF	; 255
     858:	3f 4f       	sbci	r19, 0xFF	; 255
     85a:	41 15       	cp	r20, r1
     85c:	51 05       	cpc	r21, r1
     85e:	19 f0       	breq	.+6      	; 0x866 <Endpoint_Write_Control_PStream_LE+0x82>
     860:	28 30       	cpi	r18, 0x08	; 8
     862:	31 05       	cpc	r19, r1
     864:	90 f3       	brcs	.-28     	; 0x84a <Endpoint_Write_Control_PStream_LE+0x66>
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	28 30       	cpi	r18, 0x08	; 8
     86a:	31 05       	cpc	r19, r1
     86c:	09 f4       	brne	.+2      	; 0x870 <Endpoint_Write_Control_PStream_LE+0x8c>
     86e:	91 e0       	ldi	r25, 0x01	; 1
     870:	80 91 e8 00 	lds	r24, 0x00E8
     874:	8e 77       	andi	r24, 0x7E	; 126
     876:	80 93 e8 00 	sts	0x00E8, r24
     87a:	41 15       	cp	r20, r1
     87c:	51 05       	cpc	r21, r1
     87e:	51 f6       	brne	.-108    	; 0x814 <Endpoint_Write_Control_PStream_LE+0x30>
     880:	99 23       	and	r25, r25
     882:	41 f6       	brne	.-112    	; 0x814 <Endpoint_Write_Control_PStream_LE+0x30>
     884:	06 c0       	rjmp	.+12     	; 0x892 <Endpoint_Write_Control_PStream_LE+0xae>
     886:	80 91 3a 02 	lds	r24, 0x023A
     88a:	88 23       	and	r24, r24
     88c:	41 f0       	breq	.+16     	; 0x89e <Endpoint_Write_Control_PStream_LE+0xba>
     88e:	85 30       	cpi	r24, 0x05	; 5
     890:	41 f0       	breq	.+16     	; 0x8a2 <Endpoint_Write_Control_PStream_LE+0xbe>
     892:	80 91 e8 00 	lds	r24, 0x00E8
     896:	82 ff       	sbrs	r24, 2
     898:	f6 cf       	rjmp	.-20     	; 0x886 <Endpoint_Write_Control_PStream_LE+0xa2>
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	08 95       	ret
     89e:	82 e0       	ldi	r24, 0x02	; 2
     8a0:	08 95       	ret
     8a2:	83 e0       	ldi	r24, 0x03	; 3
     8a4:	08 95       	ret

000008a6 <Endpoint_ConfigureEndpoint_Prv>:
     8a6:	38 2f       	mov	r19, r24
     8a8:	28 2f       	mov	r18, r24
     8aa:	2e c0       	rjmp	.+92     	; 0x908 <Endpoint_ConfigureEndpoint_Prv+0x62>
     8ac:	82 2f       	mov	r24, r18
     8ae:	8f 70       	andi	r24, 0x0F	; 15
     8b0:	80 93 e9 00 	sts	0x00E9, r24
     8b4:	23 17       	cp	r18, r19
     8b6:	21 f4       	brne	.+8      	; 0x8c0 <Endpoint_ConfigureEndpoint_Prv+0x1a>
     8b8:	76 2f       	mov	r23, r22
     8ba:	94 2f       	mov	r25, r20
     8bc:	50 e0       	ldi	r21, 0x00	; 0
     8be:	06 c0       	rjmp	.+12     	; 0x8cc <Endpoint_ConfigureEndpoint_Prv+0x26>
     8c0:	70 91 ec 00 	lds	r23, 0x00EC
     8c4:	90 91 ed 00 	lds	r25, 0x00ED
     8c8:	50 91 f0 00 	lds	r21, 0x00F0
     8cc:	91 ff       	sbrs	r25, 1
     8ce:	1b c0       	rjmp	.+54     	; 0x906 <Endpoint_ConfigureEndpoint_Prv+0x60>
     8d0:	80 91 eb 00 	lds	r24, 0x00EB
     8d4:	8e 7f       	andi	r24, 0xFE	; 254
     8d6:	80 93 eb 00 	sts	0x00EB, r24
     8da:	80 91 ed 00 	lds	r24, 0x00ED
     8de:	8d 7f       	andi	r24, 0xFD	; 253
     8e0:	80 93 ed 00 	sts	0x00ED, r24
     8e4:	80 91 eb 00 	lds	r24, 0x00EB
     8e8:	81 60       	ori	r24, 0x01	; 1
     8ea:	80 93 eb 00 	sts	0x00EB, r24
     8ee:	70 93 ec 00 	sts	0x00EC, r23
     8f2:	90 93 ed 00 	sts	0x00ED, r25
     8f6:	50 93 f0 00 	sts	0x00F0, r21
     8fa:	80 91 ee 00 	lds	r24, 0x00EE
     8fe:	87 fd       	sbrc	r24, 7
     900:	02 c0       	rjmp	.+4      	; 0x906 <Endpoint_ConfigureEndpoint_Prv+0x60>
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	08 95       	ret
     906:	2f 5f       	subi	r18, 0xFF	; 255
     908:	25 30       	cpi	r18, 0x05	; 5
     90a:	80 f2       	brcs	.-96     	; 0x8ac <Endpoint_ConfigureEndpoint_Prv+0x6>
     90c:	3f 70       	andi	r19, 0x0F	; 15
     90e:	30 93 e9 00 	sts	0x00E9, r19
     912:	81 e0       	ldi	r24, 0x01	; 1
     914:	08 95       	ret

00000916 <Endpoint_ConfigureEndpointTable>:
     916:	0f 93       	push	r16
     918:	1f 93       	push	r17
     91a:	cf 93       	push	r28
     91c:	df 93       	push	r29
     91e:	06 2f       	mov	r16, r22
     920:	ec 01       	movw	r28, r24
     922:	10 e0       	ldi	r17, 0x00	; 0
     924:	2a c0       	rjmp	.+84     	; 0x97a <Endpoint_ConfigureEndpointTable+0x64>
     926:	98 81       	ld	r25, Y
     928:	99 23       	and	r25, r25
     92a:	29 f1       	breq	.+74     	; 0x976 <Endpoint_ConfigureEndpointTable+0x60>
     92c:	6b 81       	ldd	r22, Y+3	; 0x03
     92e:	e9 81       	ldd	r30, Y+1	; 0x01
     930:	fa 81       	ldd	r31, Y+2	; 0x02
     932:	2c 81       	ldd	r18, Y+4	; 0x04
     934:	89 2f       	mov	r24, r25
     936:	8f 70       	andi	r24, 0x0F	; 15
     938:	85 30       	cpi	r24, 0x05	; 5
     93a:	18 f5       	brcc	.+70     	; 0x982 <Endpoint_ConfigureEndpointTable+0x6c>
     93c:	22 30       	cpi	r18, 0x02	; 2
     93e:	10 f4       	brcc	.+4      	; 0x944 <Endpoint_ConfigureEndpointTable+0x2e>
     940:	52 e0       	ldi	r21, 0x02	; 2
     942:	01 c0       	rjmp	.+2      	; 0x946 <Endpoint_ConfigureEndpointTable+0x30>
     944:	56 e0       	ldi	r21, 0x06	; 6
     946:	40 e0       	ldi	r20, 0x00	; 0
     948:	28 e0       	ldi	r18, 0x08	; 8
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	03 c0       	rjmp	.+6      	; 0x954 <Endpoint_ConfigureEndpointTable+0x3e>
     94e:	4f 5f       	subi	r20, 0xFF	; 255
     950:	22 0f       	add	r18, r18
     952:	33 1f       	adc	r19, r19
     954:	2e 17       	cp	r18, r30
     956:	3f 07       	cpc	r19, r31
     958:	d0 f3       	brcs	.-12     	; 0x94e <Endpoint_ConfigureEndpointTable+0x38>
     95a:	62 95       	swap	r22
     95c:	66 0f       	add	r22, r22
     95e:	66 0f       	add	r22, r22
     960:	60 7c       	andi	r22, 0xC0	; 192
     962:	99 1f       	adc	r25, r25
     964:	99 27       	eor	r25, r25
     966:	99 1f       	adc	r25, r25
     968:	69 2b       	or	r22, r25
     96a:	42 95       	swap	r20
     96c:	40 7f       	andi	r20, 0xF0	; 240
     96e:	45 2b       	or	r20, r21
     970:	9a df       	rcall	.-204    	; 0x8a6 <Endpoint_ConfigureEndpoint_Prv>
     972:	88 23       	and	r24, r24
     974:	31 f0       	breq	.+12     	; 0x982 <Endpoint_ConfigureEndpointTable+0x6c>
     976:	1f 5f       	subi	r17, 0xFF	; 255
     978:	25 96       	adiw	r28, 0x05	; 5
     97a:	10 17       	cp	r17, r16
     97c:	a0 f2       	brcs	.-88     	; 0x926 <Endpoint_ConfigureEndpointTable+0x10>
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	01 c0       	rjmp	.+2      	; 0x984 <Endpoint_ConfigureEndpointTable+0x6e>
     982:	80 e0       	ldi	r24, 0x00	; 0
     984:	df 91       	pop	r29
     986:	cf 91       	pop	r28
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	08 95       	ret

0000098e <Endpoint_ClearStatusStage>:
     98e:	80 91 3b 02 	lds	r24, 0x023B
     992:	88 23       	and	r24, r24
     994:	9c f4       	brge	.+38     	; 0x9bc <Endpoint_ClearStatusStage+0x2e>
     996:	04 c0       	rjmp	.+8      	; 0x9a0 <Endpoint_ClearStatusStage+0x12>
     998:	80 91 3a 02 	lds	r24, 0x023A
     99c:	88 23       	and	r24, r24
     99e:	b9 f0       	breq	.+46     	; 0x9ce <Endpoint_ClearStatusStage+0x40>
     9a0:	80 91 e8 00 	lds	r24, 0x00E8
     9a4:	82 ff       	sbrs	r24, 2
     9a6:	f8 cf       	rjmp	.-16     	; 0x998 <Endpoint_ClearStatusStage+0xa>
     9a8:	80 91 e8 00 	lds	r24, 0x00E8
     9ac:	8b 77       	andi	r24, 0x7B	; 123
     9ae:	80 93 e8 00 	sts	0x00E8, r24
     9b2:	08 95       	ret
     9b4:	80 91 3a 02 	lds	r24, 0x023A
     9b8:	88 23       	and	r24, r24
     9ba:	49 f0       	breq	.+18     	; 0x9ce <Endpoint_ClearStatusStage+0x40>
     9bc:	80 91 e8 00 	lds	r24, 0x00E8
     9c0:	80 ff       	sbrs	r24, 0
     9c2:	f8 cf       	rjmp	.-16     	; 0x9b4 <Endpoint_ClearStatusStage+0x26>
     9c4:	80 91 e8 00 	lds	r24, 0x00E8
     9c8:	8e 77       	andi	r24, 0x7E	; 126
     9ca:	80 93 e8 00 	sts	0x00E8, r24
     9ce:	08 95       	ret

000009d0 <Endpoint_WaitUntilReady>:
     9d0:	40 91 e4 00 	lds	r20, 0x00E4
     9d4:	50 91 e5 00 	lds	r21, 0x00E5
     9d8:	24 e6       	ldi	r18, 0x64	; 100
     9da:	80 91 ec 00 	lds	r24, 0x00EC
     9de:	80 ff       	sbrs	r24, 0
     9e0:	24 c0       	rjmp	.+72     	; 0xa2a <Endpoint_WaitUntilReady+0x5a>
     9e2:	80 91 e8 00 	lds	r24, 0x00E8
     9e6:	80 fd       	sbrc	r24, 0
     9e8:	1e c0       	rjmp	.+60     	; 0xa26 <Endpoint_WaitUntilReady+0x56>
     9ea:	80 91 3a 02 	lds	r24, 0x023A
     9ee:	88 23       	and	r24, r24
     9f0:	11 f4       	brne	.+4      	; 0x9f6 <Endpoint_WaitUntilReady+0x26>
     9f2:	82 e0       	ldi	r24, 0x02	; 2
     9f4:	08 95       	ret
     9f6:	85 30       	cpi	r24, 0x05	; 5
     9f8:	11 f4       	brne	.+4      	; 0x9fe <Endpoint_WaitUntilReady+0x2e>
     9fa:	83 e0       	ldi	r24, 0x03	; 3
     9fc:	08 95       	ret
     9fe:	80 91 eb 00 	lds	r24, 0x00EB
     a02:	85 ff       	sbrs	r24, 5
     a04:	02 c0       	rjmp	.+4      	; 0xa0a <Endpoint_WaitUntilReady+0x3a>
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	08 95       	ret
     a0a:	80 91 e4 00 	lds	r24, 0x00E4
     a0e:	90 91 e5 00 	lds	r25, 0x00E5
     a12:	84 17       	cp	r24, r20
     a14:	95 07       	cpc	r25, r21
     a16:	09 f3       	breq	.-62     	; 0x9da <Endpoint_WaitUntilReady+0xa>
     a18:	22 23       	and	r18, r18
     a1a:	11 f4       	brne	.+4      	; 0xa20 <Endpoint_WaitUntilReady+0x50>
     a1c:	84 e0       	ldi	r24, 0x04	; 4
     a1e:	08 95       	ret
     a20:	21 50       	subi	r18, 0x01	; 1
     a22:	ac 01       	movw	r20, r24
     a24:	da cf       	rjmp	.-76     	; 0x9da <Endpoint_WaitUntilReady+0xa>
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	08 95       	ret
     a2a:	80 91 e8 00 	lds	r24, 0x00E8
     a2e:	82 ff       	sbrs	r24, 2
     a30:	dc cf       	rjmp	.-72     	; 0x9ea <Endpoint_WaitUntilReady+0x1a>
     a32:	f9 cf       	rjmp	.-14     	; 0xa26 <Endpoint_WaitUntilReady+0x56>

00000a34 <USB_ResetInterface>:
     a34:	40 d0       	rcall	.+128    	; 0xab6 <USB_INT_DisableAllInterrupts>
     a36:	42 d0       	rcall	.+132    	; 0xabc <USB_INT_ClearAllInterrupts>
     a38:	80 91 d8 00 	lds	r24, 0x00D8
     a3c:	8f 77       	andi	r24, 0x7F	; 127
     a3e:	80 93 d8 00 	sts	0x00D8, r24
     a42:	80 91 d8 00 	lds	r24, 0x00D8
     a46:	80 68       	ori	r24, 0x80	; 128
     a48:	80 93 d8 00 	sts	0x00D8, r24
     a4c:	80 91 d8 00 	lds	r24, 0x00D8
     a50:	8f 7d       	andi	r24, 0xDF	; 223
     a52:	80 93 d8 00 	sts	0x00D8, r24
     a56:	19 bc       	out	0x29, r1	; 41
     a58:	82 e0       	ldi	r24, 0x02	; 2
     a5a:	89 bd       	out	0x29, r24	; 41
     a5c:	09 b4       	in	r0, 0x29	; 41
     a5e:	00 fe       	sbrs	r0, 0
     a60:	fd cf       	rjmp	.-6      	; 0xa5c <USB_ResetInterface+0x28>
     a62:	10 92 3a 02 	sts	0x023A, r1
     a66:	10 92 36 02 	sts	0x0236, r1
     a6a:	10 92 38 02 	sts	0x0238, r1
     a6e:	10 92 37 02 	sts	0x0237, r1
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	60 e0       	ldi	r22, 0x00	; 0
     a76:	42 e0       	ldi	r20, 0x02	; 2
     a78:	16 df       	rcall	.-468    	; 0x8a6 <Endpoint_ConfigureEndpoint_Prv>
     a7a:	80 91 e1 00 	lds	r24, 0x00E1
     a7e:	8e 7f       	andi	r24, 0xFE	; 254
     a80:	80 93 e1 00 	sts	0x00E1, r24
     a84:	80 91 e2 00 	lds	r24, 0x00E2
     a88:	81 60       	ori	r24, 0x01	; 1
     a8a:	80 93 e2 00 	sts	0x00E2, r24
     a8e:	80 91 e2 00 	lds	r24, 0x00E2
     a92:	88 60       	ori	r24, 0x08	; 8
     a94:	80 93 e2 00 	sts	0x00E2, r24
     a98:	80 91 e0 00 	lds	r24, 0x00E0
     a9c:	8e 7f       	andi	r24, 0xFE	; 254
     a9e:	80 93 e0 00 	sts	0x00E0, r24
     aa2:	08 95       	ret

00000aa4 <USB_Init>:
     aa4:	e3 e6       	ldi	r30, 0x63	; 99
     aa6:	f0 e0       	ldi	r31, 0x00	; 0
     aa8:	80 81       	ld	r24, Z
     aaa:	8e 7f       	andi	r24, 0xFE	; 254
     aac:	80 83       	st	Z, r24
     aae:	81 e0       	ldi	r24, 0x01	; 1
     ab0:	80 93 39 02 	sts	0x0239, r24
     ab4:	bf cf       	rjmp	.-130    	; 0xa34 <USB_ResetInterface>

00000ab6 <USB_INT_DisableAllInterrupts>:
     ab6:	10 92 e2 00 	sts	0x00E2, r1
     aba:	08 95       	ret

00000abc <USB_INT_ClearAllInterrupts>:
     abc:	10 92 e1 00 	sts	0x00E1, r1
     ac0:	08 95       	ret

00000ac2 <__vector_12>:
     ac2:	1f 92       	push	r1
     ac4:	0f 92       	push	r0
     ac6:	0f b6       	in	r0, 0x3f	; 63
     ac8:	0f 92       	push	r0
     aca:	11 24       	eor	r1, r1
     acc:	1f 93       	push	r17
     ace:	2f 93       	push	r18
     ad0:	3f 93       	push	r19
     ad2:	4f 93       	push	r20
     ad4:	5f 93       	push	r21
     ad6:	6f 93       	push	r22
     ad8:	7f 93       	push	r23
     ada:	8f 93       	push	r24
     adc:	9f 93       	push	r25
     ade:	af 93       	push	r26
     ae0:	bf 93       	push	r27
     ae2:	ef 93       	push	r30
     ae4:	ff 93       	push	r31
     ae6:	10 91 e9 00 	lds	r17, 0x00E9
     aea:	80 91 ec 00 	lds	r24, 0x00EC
     aee:	10 92 e9 00 	sts	0x00E9, r1
     af2:	80 91 f0 00 	lds	r24, 0x00F0
     af6:	87 7f       	andi	r24, 0xF7	; 247
     af8:	80 93 f0 00 	sts	0x00F0, r24
     afc:	78 94       	sei
     afe:	c2 d0       	rcall	.+388    	; 0xc84 <USB_Device_ProcessControlRequest>
     b00:	10 92 e9 00 	sts	0x00E9, r1
     b04:	80 91 f0 00 	lds	r24, 0x00F0
     b08:	88 60       	ori	r24, 0x08	; 8
     b0a:	80 93 f0 00 	sts	0x00F0, r24
     b0e:	1f 70       	andi	r17, 0x0F	; 15
     b10:	10 93 e9 00 	sts	0x00E9, r17
     b14:	ff 91       	pop	r31
     b16:	ef 91       	pop	r30
     b18:	bf 91       	pop	r27
     b1a:	af 91       	pop	r26
     b1c:	9f 91       	pop	r25
     b1e:	8f 91       	pop	r24
     b20:	7f 91       	pop	r23
     b22:	6f 91       	pop	r22
     b24:	5f 91       	pop	r21
     b26:	4f 91       	pop	r20
     b28:	3f 91       	pop	r19
     b2a:	2f 91       	pop	r18
     b2c:	1f 91       	pop	r17
     b2e:	0f 90       	pop	r0
     b30:	0f be       	out	0x3f, r0	; 63
     b32:	0f 90       	pop	r0
     b34:	1f 90       	pop	r1
     b36:	18 95       	reti

00000b38 <__vector_11>:
     b38:	1f 92       	push	r1
     b3a:	0f 92       	push	r0
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	0f 92       	push	r0
     b40:	11 24       	eor	r1, r1
     b42:	2f 93       	push	r18
     b44:	3f 93       	push	r19
     b46:	4f 93       	push	r20
     b48:	5f 93       	push	r21
     b4a:	6f 93       	push	r22
     b4c:	7f 93       	push	r23
     b4e:	8f 93       	push	r24
     b50:	9f 93       	push	r25
     b52:	af 93       	push	r26
     b54:	bf 93       	push	r27
     b56:	ef 93       	push	r30
     b58:	ff 93       	push	r31
     b5a:	80 91 e1 00 	lds	r24, 0x00E1
     b5e:	82 ff       	sbrs	r24, 2
     b60:	0a c0       	rjmp	.+20     	; 0xb76 <__vector_11+0x3e>
     b62:	80 91 e2 00 	lds	r24, 0x00E2
     b66:	82 ff       	sbrs	r24, 2
     b68:	06 c0       	rjmp	.+12     	; 0xb76 <__vector_11+0x3e>
     b6a:	80 91 e1 00 	lds	r24, 0x00E1
     b6e:	8b 7f       	andi	r24, 0xFB	; 251
     b70:	80 93 e1 00 	sts	0x00E1, r24
     b74:	ef d1       	rcall	.+990    	; 0xf54 <USB_Event_Stub>
     b76:	80 91 e1 00 	lds	r24, 0x00E1
     b7a:	80 ff       	sbrs	r24, 0
     b7c:	17 c0       	rjmp	.+46     	; 0xbac <__vector_11+0x74>
     b7e:	80 91 e2 00 	lds	r24, 0x00E2
     b82:	80 ff       	sbrs	r24, 0
     b84:	13 c0       	rjmp	.+38     	; 0xbac <__vector_11+0x74>
     b86:	80 91 e2 00 	lds	r24, 0x00E2
     b8a:	8e 7f       	andi	r24, 0xFE	; 254
     b8c:	80 93 e2 00 	sts	0x00E2, r24
     b90:	80 91 e2 00 	lds	r24, 0x00E2
     b94:	80 61       	ori	r24, 0x10	; 16
     b96:	80 93 e2 00 	sts	0x00E2, r24
     b9a:	80 91 d8 00 	lds	r24, 0x00D8
     b9e:	80 62       	ori	r24, 0x20	; 32
     ba0:	80 93 d8 00 	sts	0x00D8, r24
     ba4:	19 bc       	out	0x29, r1	; 41
     ba6:	10 92 3a 02 	sts	0x023A, r1
     baa:	e1 db       	rcall	.-2110   	; 0x36e <EVENT_USB_Device_Disconnect>
     bac:	80 91 e1 00 	lds	r24, 0x00E1
     bb0:	84 ff       	sbrs	r24, 4
     bb2:	2c c0       	rjmp	.+88     	; 0xc0c <__vector_11+0xd4>
     bb4:	80 91 e2 00 	lds	r24, 0x00E2
     bb8:	84 ff       	sbrs	r24, 4
     bba:	28 c0       	rjmp	.+80     	; 0xc0c <__vector_11+0xd4>
     bbc:	19 bc       	out	0x29, r1	; 41
     bbe:	82 e0       	ldi	r24, 0x02	; 2
     bc0:	89 bd       	out	0x29, r24	; 41
     bc2:	09 b4       	in	r0, 0x29	; 41
     bc4:	00 fe       	sbrs	r0, 0
     bc6:	fd cf       	rjmp	.-6      	; 0xbc2 <__vector_11+0x8a>
     bc8:	80 91 d8 00 	lds	r24, 0x00D8
     bcc:	8f 7d       	andi	r24, 0xDF	; 223
     bce:	80 93 d8 00 	sts	0x00D8, r24
     bd2:	80 91 e1 00 	lds	r24, 0x00E1
     bd6:	8f 7e       	andi	r24, 0xEF	; 239
     bd8:	80 93 e1 00 	sts	0x00E1, r24
     bdc:	80 91 e2 00 	lds	r24, 0x00E2
     be0:	8f 7e       	andi	r24, 0xEF	; 239
     be2:	80 93 e2 00 	sts	0x00E2, r24
     be6:	80 91 e2 00 	lds	r24, 0x00E2
     bea:	81 60       	ori	r24, 0x01	; 1
     bec:	80 93 e2 00 	sts	0x00E2, r24
     bf0:	80 91 36 02 	lds	r24, 0x0236
     bf4:	88 23       	and	r24, r24
     bf6:	31 f4       	brne	.+12     	; 0xc04 <__vector_11+0xcc>
     bf8:	80 91 e3 00 	lds	r24, 0x00E3
     bfc:	87 fd       	sbrc	r24, 7
     bfe:	02 c0       	rjmp	.+4      	; 0xc04 <__vector_11+0xcc>
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	01 c0       	rjmp	.+2      	; 0xc06 <__vector_11+0xce>
     c04:	84 e0       	ldi	r24, 0x04	; 4
     c06:	80 93 3a 02 	sts	0x023A, r24
     c0a:	b0 db       	rcall	.-2208   	; 0x36c <EVENT_USB_Device_Connect>
     c0c:	80 91 e1 00 	lds	r24, 0x00E1
     c10:	83 ff       	sbrs	r24, 3
     c12:	27 c0       	rjmp	.+78     	; 0xc62 <__vector_11+0x12a>
     c14:	80 91 e2 00 	lds	r24, 0x00E2
     c18:	83 ff       	sbrs	r24, 3
     c1a:	23 c0       	rjmp	.+70     	; 0xc62 <__vector_11+0x12a>
     c1c:	80 91 e1 00 	lds	r24, 0x00E1
     c20:	87 7f       	andi	r24, 0xF7	; 247
     c22:	80 93 e1 00 	sts	0x00E1, r24
     c26:	82 e0       	ldi	r24, 0x02	; 2
     c28:	80 93 3a 02 	sts	0x023A, r24
     c2c:	10 92 36 02 	sts	0x0236, r1
     c30:	80 91 e1 00 	lds	r24, 0x00E1
     c34:	8e 7f       	andi	r24, 0xFE	; 254
     c36:	80 93 e1 00 	sts	0x00E1, r24
     c3a:	80 91 e2 00 	lds	r24, 0x00E2
     c3e:	8e 7f       	andi	r24, 0xFE	; 254
     c40:	80 93 e2 00 	sts	0x00E2, r24
     c44:	80 91 e2 00 	lds	r24, 0x00E2
     c48:	80 61       	ori	r24, 0x10	; 16
     c4a:	80 93 e2 00 	sts	0x00E2, r24
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	60 e0       	ldi	r22, 0x00	; 0
     c52:	42 e0       	ldi	r20, 0x02	; 2
     c54:	28 de       	rcall	.-944    	; 0x8a6 <Endpoint_ConfigureEndpoint_Prv>
     c56:	80 91 f0 00 	lds	r24, 0x00F0
     c5a:	88 60       	ori	r24, 0x08	; 8
     c5c:	80 93 f0 00 	sts	0x00F0, r24
     c60:	79 d1       	rcall	.+754    	; 0xf54 <USB_Event_Stub>
     c62:	ff 91       	pop	r31
     c64:	ef 91       	pop	r30
     c66:	bf 91       	pop	r27
     c68:	af 91       	pop	r26
     c6a:	9f 91       	pop	r25
     c6c:	8f 91       	pop	r24
     c6e:	7f 91       	pop	r23
     c70:	6f 91       	pop	r22
     c72:	5f 91       	pop	r21
     c74:	4f 91       	pop	r20
     c76:	3f 91       	pop	r19
     c78:	2f 91       	pop	r18
     c7a:	0f 90       	pop	r0
     c7c:	0f be       	out	0x3f, r0	; 63
     c7e:	0f 90       	pop	r0
     c80:	1f 90       	pop	r1
     c82:	18 95       	reti

00000c84 <USB_Device_ProcessControlRequest>:
     c84:	1f 93       	push	r17
     c86:	df 93       	push	r29
     c88:	cf 93       	push	r28
     c8a:	cd b7       	in	r28, 0x3d	; 61
     c8c:	de b7       	in	r29, 0x3e	; 62
     c8e:	ac 97       	sbiw	r28, 0x2c	; 44
     c90:	0f b6       	in	r0, 0x3f	; 63
     c92:	f8 94       	cli
     c94:	de bf       	out	0x3e, r29	; 62
     c96:	0f be       	out	0x3f, r0	; 63
     c98:	cd bf       	out	0x3d, r28	; 61
     c9a:	eb e3       	ldi	r30, 0x3B	; 59
     c9c:	f2 e0       	ldi	r31, 0x02	; 2
     c9e:	80 91 f1 00 	lds	r24, 0x00F1
     ca2:	81 93       	st	Z+, r24
     ca4:	22 e0       	ldi	r18, 0x02	; 2
     ca6:	e3 34       	cpi	r30, 0x43	; 67
     ca8:	f2 07       	cpc	r31, r18
     caa:	c9 f7       	brne	.-14     	; 0xc9e <USB_Device_ProcessControlRequest+0x1a>
     cac:	61 db       	rcall	.-2366   	; 0x370 <EVENT_USB_Device_ControlRequest>
     cae:	80 91 e8 00 	lds	r24, 0x00E8
     cb2:	83 ff       	sbrs	r24, 3
     cb4:	37 c1       	rjmp	.+622    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     cb6:	80 91 3b 02 	lds	r24, 0x023B
     cba:	30 91 3c 02 	lds	r19, 0x023C
     cbe:	35 30       	cpi	r19, 0x05	; 5
     cc0:	09 f4       	brne	.+2      	; 0xcc4 <USB_Device_ProcessControlRequest+0x40>
     cc2:	87 c0       	rjmp	.+270    	; 0xdd2 <USB_Device_ProcessControlRequest+0x14e>
     cc4:	36 30       	cpi	r19, 0x06	; 6
     cc6:	40 f4       	brcc	.+16     	; 0xcd8 <USB_Device_ProcessControlRequest+0x54>
     cc8:	31 30       	cpi	r19, 0x01	; 1
     cca:	c9 f1       	breq	.+114    	; 0xd3e <USB_Device_ProcessControlRequest+0xba>
     ccc:	31 30       	cpi	r19, 0x01	; 1
     cce:	70 f0       	brcs	.+28     	; 0xcec <USB_Device_ProcessControlRequest+0x68>
     cd0:	33 30       	cpi	r19, 0x03	; 3
     cd2:	09 f0       	breq	.+2      	; 0xcd6 <USB_Device_ProcessControlRequest+0x52>
     cd4:	27 c1       	rjmp	.+590    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     cd6:	33 c0       	rjmp	.+102    	; 0xd3e <USB_Device_ProcessControlRequest+0xba>
     cd8:	38 30       	cpi	r19, 0x08	; 8
     cda:	09 f4       	brne	.+2      	; 0xcde <USB_Device_ProcessControlRequest+0x5a>
     cdc:	f5 c0       	rjmp	.+490    	; 0xec8 <USB_Device_ProcessControlRequest+0x244>
     cde:	39 30       	cpi	r19, 0x09	; 9
     ce0:	09 f4       	brne	.+2      	; 0xce4 <USB_Device_ProcessControlRequest+0x60>
     ce2:	04 c1       	rjmp	.+520    	; 0xeec <USB_Device_ProcessControlRequest+0x268>
     ce4:	36 30       	cpi	r19, 0x06	; 6
     ce6:	09 f0       	breq	.+2      	; 0xcea <USB_Device_ProcessControlRequest+0x66>
     ce8:	1d c1       	rjmp	.+570    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     cea:	96 c0       	rjmp	.+300    	; 0xe18 <USB_Device_ProcessControlRequest+0x194>
     cec:	80 38       	cpi	r24, 0x80	; 128
     cee:	21 f0       	breq	.+8      	; 0xcf8 <USB_Device_ProcessControlRequest+0x74>
     cf0:	82 38       	cpi	r24, 0x82	; 130
     cf2:	09 f0       	breq	.+2      	; 0xcf6 <USB_Device_ProcessControlRequest+0x72>
     cf4:	17 c1       	rjmp	.+558    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     cf6:	08 c0       	rjmp	.+16     	; 0xd08 <USB_Device_ProcessControlRequest+0x84>
     cf8:	90 91 37 02 	lds	r25, 0x0237
     cfc:	80 91 38 02 	lds	r24, 0x0238
     d00:	88 23       	and	r24, r24
     d02:	99 f0       	breq	.+38     	; 0xd2a <USB_Device_ProcessControlRequest+0xa6>
     d04:	92 60       	ori	r25, 0x02	; 2
     d06:	11 c0       	rjmp	.+34     	; 0xd2a <USB_Device_ProcessControlRequest+0xa6>
     d08:	80 91 3f 02 	lds	r24, 0x023F
     d0c:	8f 70       	andi	r24, 0x0F	; 15
     d0e:	80 93 e9 00 	sts	0x00E9, r24
     d12:	80 91 eb 00 	lds	r24, 0x00EB
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	25 e0       	ldi	r18, 0x05	; 5
     d1a:	96 95       	lsr	r25
     d1c:	87 95       	ror	r24
     d1e:	2a 95       	dec	r18
     d20:	e1 f7       	brne	.-8      	; 0xd1a <USB_Device_ProcessControlRequest+0x96>
     d22:	98 2f       	mov	r25, r24
     d24:	91 70       	andi	r25, 0x01	; 1
     d26:	10 92 e9 00 	sts	0x00E9, r1
     d2a:	80 91 e8 00 	lds	r24, 0x00E8
     d2e:	87 7f       	andi	r24, 0xF7	; 247
     d30:	80 93 e8 00 	sts	0x00E8, r24
     d34:	90 93 f1 00 	sts	0x00F1, r25
     d38:	10 92 f1 00 	sts	0x00F1, r1
     d3c:	d0 c0       	rjmp	.+416    	; 0xede <USB_Device_ProcessControlRequest+0x25a>
     d3e:	88 23       	and	r24, r24
     d40:	19 f0       	breq	.+6      	; 0xd48 <USB_Device_ProcessControlRequest+0xc4>
     d42:	82 30       	cpi	r24, 0x02	; 2
     d44:	09 f0       	breq	.+2      	; 0xd48 <USB_Device_ProcessControlRequest+0xc4>
     d46:	ee c0       	rjmp	.+476    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	8f 71       	andi	r24, 0x1F	; 31
     d4c:	90 70       	andi	r25, 0x00	; 0
     d4e:	00 97       	sbiw	r24, 0x00	; 0
     d50:	21 f0       	breq	.+8      	; 0xd5a <USB_Device_ProcessControlRequest+0xd6>
     d52:	02 97       	sbiw	r24, 0x02	; 2
     d54:	09 f0       	breq	.+2      	; 0xd58 <USB_Device_ProcessControlRequest+0xd4>
     d56:	e6 c0       	rjmp	.+460    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     d58:	0c c0       	rjmp	.+24     	; 0xd72 <USB_Device_ProcessControlRequest+0xee>
     d5a:	80 91 3d 02 	lds	r24, 0x023D
     d5e:	81 30       	cpi	r24, 0x01	; 1
     d60:	09 f0       	breq	.+2      	; 0xd64 <USB_Device_ProcessControlRequest+0xe0>
     d62:	e0 c0       	rjmp	.+448    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     d64:	10 92 38 02 	sts	0x0238, r1
     d68:	33 30       	cpi	r19, 0x03	; 3
     d6a:	69 f5       	brne	.+90     	; 0xdc6 <USB_Device_ProcessControlRequest+0x142>
     d6c:	80 93 38 02 	sts	0x0238, r24
     d70:	2a c0       	rjmp	.+84     	; 0xdc6 <USB_Device_ProcessControlRequest+0x142>
     d72:	80 91 3d 02 	lds	r24, 0x023D
     d76:	88 23       	and	r24, r24
     d78:	31 f5       	brne	.+76     	; 0xdc6 <USB_Device_ProcessControlRequest+0x142>
     d7a:	20 91 3f 02 	lds	r18, 0x023F
     d7e:	2f 70       	andi	r18, 0x0F	; 15
     d80:	09 f4       	brne	.+2      	; 0xd84 <USB_Device_ProcessControlRequest+0x100>
     d82:	d0 c0       	rjmp	.+416    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     d84:	20 93 e9 00 	sts	0x00E9, r18
     d88:	80 91 eb 00 	lds	r24, 0x00EB
     d8c:	80 ff       	sbrs	r24, 0
     d8e:	1b c0       	rjmp	.+54     	; 0xdc6 <USB_Device_ProcessControlRequest+0x142>
     d90:	33 30       	cpi	r19, 0x03	; 3
     d92:	21 f4       	brne	.+8      	; 0xd9c <USB_Device_ProcessControlRequest+0x118>
     d94:	80 91 eb 00 	lds	r24, 0x00EB
     d98:	80 62       	ori	r24, 0x20	; 32
     d9a:	13 c0       	rjmp	.+38     	; 0xdc2 <USB_Device_ProcessControlRequest+0x13e>
     d9c:	80 91 eb 00 	lds	r24, 0x00EB
     da0:	80 61       	ori	r24, 0x10	; 16
     da2:	80 93 eb 00 	sts	0x00EB, r24
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	02 c0       	rjmp	.+4      	; 0xdb0 <USB_Device_ProcessControlRequest+0x12c>
     dac:	88 0f       	add	r24, r24
     dae:	99 1f       	adc	r25, r25
     db0:	2a 95       	dec	r18
     db2:	e2 f7       	brpl	.-8      	; 0xdac <USB_Device_ProcessControlRequest+0x128>
     db4:	80 93 ea 00 	sts	0x00EA, r24
     db8:	10 92 ea 00 	sts	0x00EA, r1
     dbc:	80 91 eb 00 	lds	r24, 0x00EB
     dc0:	88 60       	ori	r24, 0x08	; 8
     dc2:	80 93 eb 00 	sts	0x00EB, r24
     dc6:	10 92 e9 00 	sts	0x00E9, r1
     dca:	80 91 e8 00 	lds	r24, 0x00E8
     dce:	87 7f       	andi	r24, 0xF7	; 247
     dd0:	89 c0       	rjmp	.+274    	; 0xee4 <USB_Device_ProcessControlRequest+0x260>
     dd2:	88 23       	and	r24, r24
     dd4:	09 f0       	breq	.+2      	; 0xdd8 <USB_Device_ProcessControlRequest+0x154>
     dd6:	a6 c0       	rjmp	.+332    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     dd8:	10 91 3d 02 	lds	r17, 0x023D
     ddc:	1f 77       	andi	r17, 0x7F	; 127
     dde:	80 91 e3 00 	lds	r24, 0x00E3
     de2:	80 78       	andi	r24, 0x80	; 128
     de4:	81 2b       	or	r24, r17
     de6:	80 93 e3 00 	sts	0x00E3, r24
     dea:	80 91 e8 00 	lds	r24, 0x00E8
     dee:	87 7f       	andi	r24, 0xF7	; 247
     df0:	80 93 e8 00 	sts	0x00E8, r24
     df4:	cc dd       	rcall	.-1128   	; 0x98e <Endpoint_ClearStatusStage>
     df6:	80 91 e8 00 	lds	r24, 0x00E8
     dfa:	80 ff       	sbrs	r24, 0
     dfc:	fc cf       	rjmp	.-8      	; 0xdf6 <USB_Device_ProcessControlRequest+0x172>
     dfe:	80 91 e3 00 	lds	r24, 0x00E3
     e02:	80 68       	ori	r24, 0x80	; 128
     e04:	80 93 e3 00 	sts	0x00E3, r24
     e08:	11 23       	and	r17, r17
     e0a:	11 f4       	brne	.+4      	; 0xe10 <USB_Device_ProcessControlRequest+0x18c>
     e0c:	82 e0       	ldi	r24, 0x02	; 2
     e0e:	01 c0       	rjmp	.+2      	; 0xe12 <USB_Device_ProcessControlRequest+0x18e>
     e10:	83 e0       	ldi	r24, 0x03	; 3
     e12:	80 93 3a 02 	sts	0x023A, r24
     e16:	86 c0       	rjmp	.+268    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     e18:	80 58       	subi	r24, 0x80	; 128
     e1a:	82 30       	cpi	r24, 0x02	; 2
     e1c:	08 f0       	brcs	.+2      	; 0xe20 <USB_Device_ProcessControlRequest+0x19c>
     e1e:	82 c0       	rjmp	.+260    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     e20:	80 91 3d 02 	lds	r24, 0x023D
     e24:	90 91 3e 02 	lds	r25, 0x023E
     e28:	23 e0       	ldi	r18, 0x03	; 3
     e2a:	8c 3d       	cpi	r24, 0xDC	; 220
     e2c:	92 07       	cpc	r25, r18
     e2e:	09 f0       	breq	.+2      	; 0xe32 <USB_Device_ProcessControlRequest+0x1ae>
     e30:	33 c0       	rjmp	.+102    	; 0xe98 <USB_Device_ProcessControlRequest+0x214>
     e32:	83 e0       	ldi	r24, 0x03	; 3
     e34:	8c 83       	std	Y+4, r24	; 0x04
     e36:	8a e2       	ldi	r24, 0x2A	; 42
     e38:	8b 83       	std	Y+3, r24	; 0x03
     e3a:	7f b7       	in	r23, 0x3f	; 63
     e3c:	f8 94       	cli
     e3e:	de 01       	movw	r26, r28
     e40:	15 96       	adiw	r26, 0x05	; 5
     e42:	6e e0       	ldi	r22, 0x0E	; 14
     e44:	40 e0       	ldi	r20, 0x00	; 0
     e46:	50 e0       	ldi	r21, 0x00	; 0
     e48:	11 e2       	ldi	r17, 0x21	; 33
     e4a:	e6 2f       	mov	r30, r22
     e4c:	f0 e0       	ldi	r31, 0x00	; 0
     e4e:	10 93 57 00 	sts	0x0057, r17
     e52:	84 91       	lpm	r24, Z+
     e54:	40 ff       	sbrs	r20, 0
     e56:	03 c0       	rjmp	.+6      	; 0xe5e <USB_Device_ProcessControlRequest+0x1da>
     e58:	82 95       	swap	r24
     e5a:	8f 70       	andi	r24, 0x0F	; 15
     e5c:	6f 5f       	subi	r22, 0xFF	; 255
     e5e:	8f 70       	andi	r24, 0x0F	; 15
     e60:	28 2f       	mov	r18, r24
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	8a 30       	cpi	r24, 0x0A	; 10
     e66:	18 f0       	brcs	.+6      	; 0xe6e <USB_Device_ProcessControlRequest+0x1ea>
     e68:	c9 01       	movw	r24, r18
     e6a:	c7 96       	adiw	r24, 0x37	; 55
     e6c:	02 c0       	rjmp	.+4      	; 0xe72 <USB_Device_ProcessControlRequest+0x1ee>
     e6e:	c9 01       	movw	r24, r18
     e70:	c0 96       	adiw	r24, 0x30	; 48
     e72:	8d 93       	st	X+, r24
     e74:	9d 93       	st	X+, r25
     e76:	4f 5f       	subi	r20, 0xFF	; 255
     e78:	5f 4f       	sbci	r21, 0xFF	; 255
     e7a:	44 31       	cpi	r20, 0x14	; 20
     e7c:	51 05       	cpc	r21, r1
     e7e:	29 f7       	brne	.-54     	; 0xe4a <USB_Device_ProcessControlRequest+0x1c6>
     e80:	7f bf       	out	0x3f, r23	; 63
     e82:	80 91 e8 00 	lds	r24, 0x00E8
     e86:	87 7f       	andi	r24, 0xF7	; 247
     e88:	80 93 e8 00 	sts	0x00E8, r24
     e8c:	ce 01       	movw	r24, r28
     e8e:	03 96       	adiw	r24, 0x03	; 3
     e90:	6a e2       	ldi	r22, 0x2A	; 42
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	49 dc       	rcall	.-1902   	; 0x728 <Endpoint_Write_Control_Stream_LE>
     e96:	12 c0       	rjmp	.+36     	; 0xebc <USB_Device_ProcessControlRequest+0x238>
     e98:	60 91 3f 02 	lds	r22, 0x023F
     e9c:	ae 01       	movw	r20, r28
     e9e:	4f 5f       	subi	r20, 0xFF	; 255
     ea0:	5f 4f       	sbci	r21, 0xFF	; 255
     ea2:	14 dc       	rcall	.-2008   	; 0x6cc <CALLBACK_USB_GetDescriptor>
     ea4:	bc 01       	movw	r22, r24
     ea6:	00 97       	sbiw	r24, 0x00	; 0
     ea8:	09 f4       	brne	.+2      	; 0xeac <USB_Device_ProcessControlRequest+0x228>
     eaa:	3c c0       	rjmp	.+120    	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     eac:	80 91 e8 00 	lds	r24, 0x00E8
     eb0:	87 7f       	andi	r24, 0xF7	; 247
     eb2:	80 93 e8 00 	sts	0x00E8, r24
     eb6:	89 81       	ldd	r24, Y+1	; 0x01
     eb8:	9a 81       	ldd	r25, Y+2	; 0x02
     eba:	94 dc       	rcall	.-1752   	; 0x7e4 <Endpoint_Write_Control_PStream_LE>
     ebc:	80 91 e8 00 	lds	r24, 0x00E8
     ec0:	8b 77       	andi	r24, 0x7B	; 123
     ec2:	80 93 e8 00 	sts	0x00E8, r24
     ec6:	2e c0       	rjmp	.+92     	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     ec8:	80 38       	cpi	r24, 0x80	; 128
     eca:	61 f5       	brne	.+88     	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     ecc:	80 91 e8 00 	lds	r24, 0x00E8
     ed0:	87 7f       	andi	r24, 0xF7	; 247
     ed2:	80 93 e8 00 	sts	0x00E8, r24
     ed6:	80 91 36 02 	lds	r24, 0x0236
     eda:	80 93 f1 00 	sts	0x00F1, r24
     ede:	80 91 e8 00 	lds	r24, 0x00E8
     ee2:	8e 77       	andi	r24, 0x7E	; 126
     ee4:	80 93 e8 00 	sts	0x00E8, r24
     ee8:	52 dd       	rcall	.-1372   	; 0x98e <Endpoint_ClearStatusStage>
     eea:	1c c0       	rjmp	.+56     	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     eec:	88 23       	and	r24, r24
     eee:	d1 f4       	brne	.+52     	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     ef0:	90 91 3d 02 	lds	r25, 0x023D
     ef4:	92 30       	cpi	r25, 0x02	; 2
     ef6:	b0 f4       	brcc	.+44     	; 0xf24 <USB_Device_ProcessControlRequest+0x2a0>
     ef8:	80 91 e8 00 	lds	r24, 0x00E8
     efc:	87 7f       	andi	r24, 0xF7	; 247
     efe:	80 93 e8 00 	sts	0x00E8, r24
     f02:	90 93 36 02 	sts	0x0236, r25
     f06:	43 dd       	rcall	.-1402   	; 0x98e <Endpoint_ClearStatusStage>
     f08:	80 91 36 02 	lds	r24, 0x0236
     f0c:	88 23       	and	r24, r24
     f0e:	31 f4       	brne	.+12     	; 0xf1c <USB_Device_ProcessControlRequest+0x298>
     f10:	80 91 e3 00 	lds	r24, 0x00E3
     f14:	87 fd       	sbrc	r24, 7
     f16:	02 c0       	rjmp	.+4      	; 0xf1c <USB_Device_ProcessControlRequest+0x298>
     f18:	81 e0       	ldi	r24, 0x01	; 1
     f1a:	01 c0       	rjmp	.+2      	; 0xf1e <USB_Device_ProcessControlRequest+0x29a>
     f1c:	84 e0       	ldi	r24, 0x04	; 4
     f1e:	80 93 3a 02 	sts	0x023A, r24
     f22:	29 da       	rcall	.-2990   	; 0x376 <EVENT_USB_Device_ConfigurationChanged>
     f24:	80 91 e8 00 	lds	r24, 0x00E8
     f28:	83 ff       	sbrs	r24, 3
     f2a:	0a c0       	rjmp	.+20     	; 0xf40 <USB_Device_ProcessControlRequest+0x2bc>
     f2c:	80 91 e8 00 	lds	r24, 0x00E8
     f30:	87 7f       	andi	r24, 0xF7	; 247
     f32:	80 93 e8 00 	sts	0x00E8, r24
     f36:	80 91 eb 00 	lds	r24, 0x00EB
     f3a:	80 62       	ori	r24, 0x20	; 32
     f3c:	80 93 eb 00 	sts	0x00EB, r24
     f40:	ac 96       	adiw	r28, 0x2c	; 44
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	f8 94       	cli
     f46:	de bf       	out	0x3e, r29	; 62
     f48:	0f be       	out	0x3f, r0	; 63
     f4a:	cd bf       	out	0x3d, r28	; 61
     f4c:	cf 91       	pop	r28
     f4e:	df 91       	pop	r29
     f50:	1f 91       	pop	r17
     f52:	08 95       	ret

00000f54 <USB_Event_Stub>:
     f54:	08 95       	ret

00000f56 <USB_USBTask>:
     f56:	1f 93       	push	r17
     f58:	80 91 3a 02 	lds	r24, 0x023A
     f5c:	88 23       	and	r24, r24
     f5e:	71 f0       	breq	.+28     	; 0xf7c <USB_USBTask+0x26>
     f60:	10 91 e9 00 	lds	r17, 0x00E9
     f64:	80 91 ec 00 	lds	r24, 0x00EC
     f68:	10 92 e9 00 	sts	0x00E9, r1
     f6c:	80 91 e8 00 	lds	r24, 0x00E8
     f70:	83 ff       	sbrs	r24, 3
     f72:	01 c0       	rjmp	.+2      	; 0xf76 <USB_USBTask+0x20>
     f74:	87 de       	rcall	.-754    	; 0xc84 <USB_Device_ProcessControlRequest>
     f76:	1f 70       	andi	r17, 0x0F	; 15
     f78:	10 93 e9 00 	sts	0x00E9, r17
     f7c:	1f 91       	pop	r17
     f7e:	08 95       	ret

00000f80 <CDC_Device_ReceiveByte>:
     f80:	fc 01       	movw	r30, r24
     f82:	80 91 3a 02 	lds	r24, 0x023A
     f86:	84 30       	cpi	r24, 0x04	; 4
     f88:	29 f5       	brne	.+74     	; 0xfd4 <CDC_Device_ReceiveByte+0x54>
     f8a:	84 89       	ldd	r24, Z+20	; 0x14
     f8c:	95 89       	ldd	r25, Z+21	; 0x15
     f8e:	a6 89       	ldd	r26, Z+22	; 0x16
     f90:	b7 89       	ldd	r27, Z+23	; 0x17
     f92:	00 97       	sbiw	r24, 0x00	; 0
     f94:	a1 05       	cpc	r26, r1
     f96:	b1 05       	cpc	r27, r1
     f98:	e9 f0       	breq	.+58     	; 0xfd4 <CDC_Device_ReceiveByte+0x54>
     f9a:	86 81       	ldd	r24, Z+6	; 0x06
     f9c:	8f 70       	andi	r24, 0x0F	; 15
     f9e:	80 93 e9 00 	sts	0x00E9, r24
     fa2:	80 91 e8 00 	lds	r24, 0x00E8
     fa6:	82 ff       	sbrs	r24, 2
     fa8:	15 c0       	rjmp	.+42     	; 0xfd4 <CDC_Device_ReceiveByte+0x54>
     faa:	80 91 f2 00 	lds	r24, 0x00F2
     fae:	88 23       	and	r24, r24
     fb0:	19 f4       	brne	.+6      	; 0xfb8 <CDC_Device_ReceiveByte+0x38>
     fb2:	2f ef       	ldi	r18, 0xFF	; 255
     fb4:	3f ef       	ldi	r19, 0xFF	; 255
     fb6:	04 c0       	rjmp	.+8      	; 0xfc0 <CDC_Device_ReceiveByte+0x40>
     fb8:	80 91 f1 00 	lds	r24, 0x00F1
     fbc:	28 2f       	mov	r18, r24
     fbe:	30 e0       	ldi	r19, 0x00	; 0
     fc0:	80 91 f2 00 	lds	r24, 0x00F2
     fc4:	88 23       	and	r24, r24
     fc6:	41 f4       	brne	.+16     	; 0xfd8 <CDC_Device_ReceiveByte+0x58>
     fc8:	80 91 e8 00 	lds	r24, 0x00E8
     fcc:	8b 77       	andi	r24, 0x7B	; 123
     fce:	80 93 e8 00 	sts	0x00E8, r24
     fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <CDC_Device_ReceiveByte+0x58>
     fd4:	2f ef       	ldi	r18, 0xFF	; 255
     fd6:	3f ef       	ldi	r19, 0xFF	; 255
     fd8:	c9 01       	movw	r24, r18
     fda:	08 95       	ret

00000fdc <CDC_Device_CreateStream>:
     fdc:	fb 01       	movw	r30, r22
     fde:	2e e0       	ldi	r18, 0x0E	; 14
     fe0:	db 01       	movw	r26, r22
     fe2:	1d 92       	st	X+, r1
     fe4:	2a 95       	dec	r18
     fe6:	e9 f7       	brne	.-6      	; 0xfe2 <CDC_Device_CreateStream+0x6>
     fe8:	23 e0       	ldi	r18, 0x03	; 3
     fea:	23 83       	std	Z+3, r18	; 0x03
     fec:	28 e7       	ldi	r18, 0x78	; 120
     fee:	38 e0       	ldi	r19, 0x08	; 8
     ff0:	31 87       	std	Z+9, r19	; 0x09
     ff2:	20 87       	std	Z+8, r18	; 0x08
     ff4:	21 e0       	ldi	r18, 0x01	; 1
     ff6:	38 e0       	ldi	r19, 0x08	; 8
     ff8:	33 87       	std	Z+11, r19	; 0x0b
     ffa:	22 87       	std	Z+10, r18	; 0x0a
     ffc:	95 87       	std	Z+13, r25	; 0x0d
     ffe:	84 87       	std	Z+12, r24	; 0x0c
    1000:	08 95       	ret

00001002 <CDC_Device_getchar>:
    1002:	fc 01       	movw	r30, r24
    1004:	84 85       	ldd	r24, Z+12	; 0x0c
    1006:	95 85       	ldd	r25, Z+13	; 0x0d
    1008:	bb df       	rcall	.-138    	; 0xf80 <CDC_Device_ReceiveByte>
    100a:	9c 01       	movw	r18, r24
    100c:	97 ff       	sbrs	r25, 7
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <CDC_Device_getchar+0x12>
    1010:	2e ef       	ldi	r18, 0xFE	; 254
    1012:	3f ef       	ldi	r19, 0xFF	; 255
    1014:	c9 01       	movw	r24, r18
    1016:	08 95       	ret

00001018 <CDC_Device_Event_Stub>:
    1018:	08 95       	ret

0000101a <CDC_Device_Flush>:
    101a:	fc 01       	movw	r30, r24
    101c:	80 91 3a 02 	lds	r24, 0x023A
    1020:	84 30       	cpi	r24, 0x04	; 4
    1022:	19 f5       	brne	.+70     	; 0x106a <CDC_Device_Flush+0x50>
    1024:	84 89       	ldd	r24, Z+20	; 0x14
    1026:	95 89       	ldd	r25, Z+21	; 0x15
    1028:	a6 89       	ldd	r26, Z+22	; 0x16
    102a:	b7 89       	ldd	r27, Z+23	; 0x17
    102c:	00 97       	sbiw	r24, 0x00	; 0
    102e:	a1 05       	cpc	r26, r1
    1030:	b1 05       	cpc	r27, r1
    1032:	d9 f0       	breq	.+54     	; 0x106a <CDC_Device_Flush+0x50>
    1034:	81 81       	ldd	r24, Z+1	; 0x01
    1036:	8f 70       	andi	r24, 0x0F	; 15
    1038:	80 93 e9 00 	sts	0x00E9, r24
    103c:	80 91 f2 00 	lds	r24, 0x00F2
    1040:	88 23       	and	r24, r24
    1042:	a9 f0       	breq	.+42     	; 0x106e <CDC_Device_Flush+0x54>
    1044:	90 91 e8 00 	lds	r25, 0x00E8
    1048:	80 91 e8 00 	lds	r24, 0x00E8
    104c:	8e 77       	andi	r24, 0x7E	; 126
    104e:	80 93 e8 00 	sts	0x00E8, r24
    1052:	95 fd       	sbrc	r25, 5
    1054:	0c c0       	rjmp	.+24     	; 0x106e <CDC_Device_Flush+0x54>
    1056:	bc dc       	rcall	.-1672   	; 0x9d0 <Endpoint_WaitUntilReady>
    1058:	98 2f       	mov	r25, r24
    105a:	88 23       	and	r24, r24
    105c:	49 f4       	brne	.+18     	; 0x1070 <CDC_Device_Flush+0x56>
    105e:	80 91 e8 00 	lds	r24, 0x00E8
    1062:	8e 77       	andi	r24, 0x7E	; 126
    1064:	80 93 e8 00 	sts	0x00E8, r24
    1068:	03 c0       	rjmp	.+6      	; 0x1070 <CDC_Device_Flush+0x56>
    106a:	92 e0       	ldi	r25, 0x02	; 2
    106c:	01 c0       	rjmp	.+2      	; 0x1070 <CDC_Device_Flush+0x56>
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	89 2f       	mov	r24, r25
    1072:	08 95       	ret

00001074 <CDC_Device_USBTask>:
    1074:	fc 01       	movw	r30, r24
    1076:	80 91 3a 02 	lds	r24, 0x023A
    107a:	84 30       	cpi	r24, 0x04	; 4
    107c:	91 f4       	brne	.+36     	; 0x10a2 <CDC_Device_USBTask+0x2e>
    107e:	84 89       	ldd	r24, Z+20	; 0x14
    1080:	95 89       	ldd	r25, Z+21	; 0x15
    1082:	a6 89       	ldd	r26, Z+22	; 0x16
    1084:	b7 89       	ldd	r27, Z+23	; 0x17
    1086:	00 97       	sbiw	r24, 0x00	; 0
    1088:	a1 05       	cpc	r26, r1
    108a:	b1 05       	cpc	r27, r1
    108c:	51 f0       	breq	.+20     	; 0x10a2 <CDC_Device_USBTask+0x2e>
    108e:	81 81       	ldd	r24, Z+1	; 0x01
    1090:	8f 70       	andi	r24, 0x0F	; 15
    1092:	80 93 e9 00 	sts	0x00E9, r24
    1096:	80 91 e8 00 	lds	r24, 0x00E8
    109a:	80 ff       	sbrs	r24, 0
    109c:	02 c0       	rjmp	.+4      	; 0x10a2 <CDC_Device_USBTask+0x2e>
    109e:	cf 01       	movw	r24, r30
    10a0:	bc cf       	rjmp	.-136    	; 0x101a <CDC_Device_Flush>
    10a2:	08 95       	ret

000010a4 <CDC_Device_SendByte>:
    10a4:	1f 93       	push	r17
    10a6:	fc 01       	movw	r30, r24
    10a8:	16 2f       	mov	r17, r22
    10aa:	80 91 3a 02 	lds	r24, 0x023A
    10ae:	84 30       	cpi	r24, 0x04	; 4
    10b0:	e1 f4       	brne	.+56     	; 0x10ea <CDC_Device_SendByte+0x46>
    10b2:	84 89       	ldd	r24, Z+20	; 0x14
    10b4:	95 89       	ldd	r25, Z+21	; 0x15
    10b6:	a6 89       	ldd	r26, Z+22	; 0x16
    10b8:	b7 89       	ldd	r27, Z+23	; 0x17
    10ba:	00 97       	sbiw	r24, 0x00	; 0
    10bc:	a1 05       	cpc	r26, r1
    10be:	b1 05       	cpc	r27, r1
    10c0:	a1 f0       	breq	.+40     	; 0x10ea <CDC_Device_SendByte+0x46>
    10c2:	81 81       	ldd	r24, Z+1	; 0x01
    10c4:	8f 70       	andi	r24, 0x0F	; 15
    10c6:	80 93 e9 00 	sts	0x00E9, r24
    10ca:	80 91 e8 00 	lds	r24, 0x00E8
    10ce:	85 fd       	sbrc	r24, 5
    10d0:	08 c0       	rjmp	.+16     	; 0x10e2 <CDC_Device_SendByte+0x3e>
    10d2:	80 91 e8 00 	lds	r24, 0x00E8
    10d6:	8e 77       	andi	r24, 0x7E	; 126
    10d8:	80 93 e8 00 	sts	0x00E8, r24
    10dc:	79 dc       	rcall	.-1806   	; 0x9d0 <Endpoint_WaitUntilReady>
    10de:	88 23       	and	r24, r24
    10e0:	29 f4       	brne	.+10     	; 0x10ec <CDC_Device_SendByte+0x48>
    10e2:	10 93 f1 00 	sts	0x00F1, r17
    10e6:	80 e0       	ldi	r24, 0x00	; 0
    10e8:	01 c0       	rjmp	.+2      	; 0x10ec <CDC_Device_SendByte+0x48>
    10ea:	82 e0       	ldi	r24, 0x02	; 2
    10ec:	1f 91       	pop	r17
    10ee:	08 95       	ret

000010f0 <CDC_Device_putchar>:
    10f0:	28 2f       	mov	r18, r24
    10f2:	fb 01       	movw	r30, r22
    10f4:	84 85       	ldd	r24, Z+12	; 0x0c
    10f6:	95 85       	ldd	r25, Z+13	; 0x0d
    10f8:	62 2f       	mov	r22, r18
    10fa:	d4 df       	rcall	.-88     	; 0x10a4 <CDC_Device_SendByte>
    10fc:	88 23       	and	r24, r24
    10fe:	19 f4       	brne	.+6      	; 0x1106 <CDC_Device_putchar+0x16>
    1100:	20 e0       	ldi	r18, 0x00	; 0
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	02 c0       	rjmp	.+4      	; 0x110a <CDC_Device_putchar+0x1a>
    1106:	2f ef       	ldi	r18, 0xFF	; 255
    1108:	3f ef       	ldi	r19, 0xFF	; 255
    110a:	c9 01       	movw	r24, r18
    110c:	08 95       	ret

0000110e <CDC_Device_ConfigureEndpoints>:
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	ec 01       	movw	r28, r24
    1114:	40 96       	adiw	r24, 0x10	; 16
    1116:	fc 01       	movw	r30, r24
    1118:	8b e0       	ldi	r24, 0x0B	; 11
    111a:	df 01       	movw	r26, r30
    111c:	1d 92       	st	X+, r1
    111e:	8a 95       	dec	r24
    1120:	e9 f7       	brne	.-6      	; 0x111c <CDC_Device_ConfigureEndpoints+0xe>
    1122:	82 e0       	ldi	r24, 0x02	; 2
    1124:	8c 83       	std	Y+4, r24	; 0x04
    1126:	89 87       	std	Y+9, r24	; 0x09
    1128:	83 e0       	ldi	r24, 0x03	; 3
    112a:	8e 87       	std	Y+14, r24	; 0x0e
    112c:	ce 01       	movw	r24, r28
    112e:	01 96       	adiw	r24, 0x01	; 1
    1130:	61 e0       	ldi	r22, 0x01	; 1
    1132:	f1 db       	rcall	.-2078   	; 0x916 <Endpoint_ConfigureEndpointTable>
    1134:	88 23       	and	r24, r24
    1136:	71 f0       	breq	.+28     	; 0x1154 <CDC_Device_ConfigureEndpoints+0x46>
    1138:	ce 01       	movw	r24, r28
    113a:	06 96       	adiw	r24, 0x06	; 6
    113c:	61 e0       	ldi	r22, 0x01	; 1
    113e:	eb db       	rcall	.-2090   	; 0x916 <Endpoint_ConfigureEndpointTable>
    1140:	88 23       	and	r24, r24
    1142:	41 f0       	breq	.+16     	; 0x1154 <CDC_Device_ConfigureEndpoints+0x46>
    1144:	ce 01       	movw	r24, r28
    1146:	0b 96       	adiw	r24, 0x0b	; 11
    1148:	61 e0       	ldi	r22, 0x01	; 1
    114a:	e5 db       	rcall	.-2102   	; 0x916 <Endpoint_ConfigureEndpointTable>
    114c:	88 23       	and	r24, r24
    114e:	19 f0       	breq	.+6      	; 0x1156 <CDC_Device_ConfigureEndpoints+0x48>
    1150:	81 e0       	ldi	r24, 0x01	; 1
    1152:	01 c0       	rjmp	.+2      	; 0x1156 <CDC_Device_ConfigureEndpoints+0x48>
    1154:	80 e0       	ldi	r24, 0x00	; 0
    1156:	df 91       	pop	r29
    1158:	cf 91       	pop	r28
    115a:	08 95       	ret

0000115c <CDC_Device_ProcessControlRequest>:
    115c:	cf 93       	push	r28
    115e:	df 93       	push	r29
    1160:	ec 01       	movw	r28, r24
    1162:	80 91 e8 00 	lds	r24, 0x00E8
    1166:	83 ff       	sbrs	r24, 3
    1168:	a3 c0       	rjmp	.+326    	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    116a:	88 81       	ld	r24, Y
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	20 91 3f 02 	lds	r18, 0x023F
    1172:	30 91 40 02 	lds	r19, 0x0240
    1176:	28 17       	cp	r18, r24
    1178:	39 07       	cpc	r19, r25
    117a:	09 f0       	breq	.+2      	; 0x117e <CDC_Device_ProcessControlRequest+0x22>
    117c:	99 c0       	rjmp	.+306    	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    117e:	80 91 3c 02 	lds	r24, 0x023C
    1182:	81 32       	cpi	r24, 0x21	; 33
    1184:	69 f0       	breq	.+26     	; 0x11a0 <CDC_Device_ProcessControlRequest+0x44>
    1186:	82 32       	cpi	r24, 0x22	; 34
    1188:	20 f4       	brcc	.+8      	; 0x1192 <CDC_Device_ProcessControlRequest+0x36>
    118a:	80 32       	cpi	r24, 0x20	; 32
    118c:	09 f0       	breq	.+2      	; 0x1190 <CDC_Device_ProcessControlRequest+0x34>
    118e:	90 c0       	rjmp	.+288    	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    1190:	3c c0       	rjmp	.+120    	; 0x120a <CDC_Device_ProcessControlRequest+0xae>
    1192:	82 32       	cpi	r24, 0x22	; 34
    1194:	09 f4       	brne	.+2      	; 0x1198 <CDC_Device_ProcessControlRequest+0x3c>
    1196:	6b c0       	rjmp	.+214    	; 0x126e <CDC_Device_ProcessControlRequest+0x112>
    1198:	83 32       	cpi	r24, 0x23	; 35
    119a:	09 f0       	breq	.+2      	; 0x119e <CDC_Device_ProcessControlRequest+0x42>
    119c:	89 c0       	rjmp	.+274    	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    119e:	7a c0       	rjmp	.+244    	; 0x1294 <CDC_Device_ProcessControlRequest+0x138>
    11a0:	80 91 3b 02 	lds	r24, 0x023B
    11a4:	81 3a       	cpi	r24, 0xA1	; 161
    11a6:	09 f0       	breq	.+2      	; 0x11aa <CDC_Device_ProcessControlRequest+0x4e>
    11a8:	83 c0       	rjmp	.+262    	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    11aa:	80 91 e8 00 	lds	r24, 0x00E8
    11ae:	87 7f       	andi	r24, 0xF7	; 247
    11b0:	80 93 e8 00 	sts	0x00E8, r24
    11b4:	80 91 e8 00 	lds	r24, 0x00E8
    11b8:	80 ff       	sbrs	r24, 0
    11ba:	fc cf       	rjmp	.-8      	; 0x11b4 <CDC_Device_ProcessControlRequest+0x58>
    11bc:	8c 89       	ldd	r24, Y+20	; 0x14
    11be:	9d 89       	ldd	r25, Y+21	; 0x15
    11c0:	ae 89       	ldd	r26, Y+22	; 0x16
    11c2:	bf 89       	ldd	r27, Y+23	; 0x17
    11c4:	80 93 f1 00 	sts	0x00F1, r24
    11c8:	29 2f       	mov	r18, r25
    11ca:	3a 2f       	mov	r19, r26
    11cc:	4b 2f       	mov	r20, r27
    11ce:	55 27       	eor	r21, r21
    11d0:	20 93 f1 00 	sts	0x00F1, r18
    11d4:	9d 01       	movw	r18, r26
    11d6:	44 27       	eor	r20, r20
    11d8:	55 27       	eor	r21, r21
    11da:	20 93 f1 00 	sts	0x00F1, r18
    11de:	8b 2f       	mov	r24, r27
    11e0:	99 27       	eor	r25, r25
    11e2:	aa 27       	eor	r26, r26
    11e4:	bb 27       	eor	r27, r27
    11e6:	80 93 f1 00 	sts	0x00F1, r24
    11ea:	88 8d       	ldd	r24, Y+24	; 0x18
    11ec:	80 93 f1 00 	sts	0x00F1, r24
    11f0:	89 8d       	ldd	r24, Y+25	; 0x19
    11f2:	80 93 f1 00 	sts	0x00F1, r24
    11f6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    11f8:	80 93 f1 00 	sts	0x00F1, r24
    11fc:	80 91 e8 00 	lds	r24, 0x00E8
    1200:	8e 77       	andi	r24, 0x7E	; 126
    1202:	80 93 e8 00 	sts	0x00E8, r24
    1206:	c3 db       	rcall	.-2170   	; 0x98e <Endpoint_ClearStatusStage>
    1208:	53 c0       	rjmp	.+166    	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    120a:	80 91 3b 02 	lds	r24, 0x023B
    120e:	81 32       	cpi	r24, 0x21	; 33
    1210:	09 f0       	breq	.+2      	; 0x1214 <CDC_Device_ProcessControlRequest+0xb8>
    1212:	4e c0       	rjmp	.+156    	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    1214:	80 91 e8 00 	lds	r24, 0x00E8
    1218:	87 7f       	andi	r24, 0xF7	; 247
    121a:	80 93 e8 00 	sts	0x00E8, r24
    121e:	05 c0       	rjmp	.+10     	; 0x122a <CDC_Device_ProcessControlRequest+0xce>
    1220:	80 91 3a 02 	lds	r24, 0x023A
    1224:	88 23       	and	r24, r24
    1226:	09 f4       	brne	.+2      	; 0x122a <CDC_Device_ProcessControlRequest+0xce>
    1228:	43 c0       	rjmp	.+134    	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    122a:	80 91 e8 00 	lds	r24, 0x00E8
    122e:	82 ff       	sbrs	r24, 2
    1230:	f7 cf       	rjmp	.-18     	; 0x1220 <CDC_Device_ProcessControlRequest+0xc4>
    1232:	80 91 f1 00 	lds	r24, 0x00F1
    1236:	90 91 f1 00 	lds	r25, 0x00F1
    123a:	20 91 f1 00 	lds	r18, 0x00F1
    123e:	30 91 f1 00 	lds	r19, 0x00F1
    1242:	8c 8b       	std	Y+20, r24	; 0x14
    1244:	9d 8b       	std	Y+21, r25	; 0x15
    1246:	2e 8b       	std	Y+22, r18	; 0x16
    1248:	3f 8b       	std	Y+23, r19	; 0x17
    124a:	80 91 f1 00 	lds	r24, 0x00F1
    124e:	88 8f       	std	Y+24, r24	; 0x18
    1250:	80 91 f1 00 	lds	r24, 0x00F1
    1254:	89 8f       	std	Y+25, r24	; 0x19
    1256:	80 91 f1 00 	lds	r24, 0x00F1
    125a:	8a 8f       	std	Y+26, r24	; 0x1a
    125c:	80 91 e8 00 	lds	r24, 0x00E8
    1260:	8b 77       	andi	r24, 0x7B	; 123
    1262:	80 93 e8 00 	sts	0x00E8, r24
    1266:	93 db       	rcall	.-2266   	; 0x98e <Endpoint_ClearStatusStage>
    1268:	ce 01       	movw	r24, r28
    126a:	d6 de       	rcall	.-596    	; 0x1018 <CDC_Device_Event_Stub>
    126c:	21 c0       	rjmp	.+66     	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    126e:	80 91 3b 02 	lds	r24, 0x023B
    1272:	81 32       	cpi	r24, 0x21	; 33
    1274:	e9 f4       	brne	.+58     	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    1276:	80 91 e8 00 	lds	r24, 0x00E8
    127a:	87 7f       	andi	r24, 0xF7	; 247
    127c:	80 93 e8 00 	sts	0x00E8, r24
    1280:	86 db       	rcall	.-2292   	; 0x98e <Endpoint_ClearStatusStage>
    1282:	80 91 3d 02 	lds	r24, 0x023D
    1286:	90 91 3e 02 	lds	r25, 0x023E
    128a:	99 8b       	std	Y+17, r25	; 0x11
    128c:	88 8b       	std	Y+16, r24	; 0x10
    128e:	ce 01       	movw	r24, r28
    1290:	c3 de       	rcall	.-634    	; 0x1018 <CDC_Device_Event_Stub>
    1292:	0e c0       	rjmp	.+28     	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    1294:	80 91 3b 02 	lds	r24, 0x023B
    1298:	81 32       	cpi	r24, 0x21	; 33
    129a:	51 f4       	brne	.+20     	; 0x12b0 <CDC_Device_ProcessControlRequest+0x154>
    129c:	80 91 e8 00 	lds	r24, 0x00E8
    12a0:	87 7f       	andi	r24, 0xF7	; 247
    12a2:	80 93 e8 00 	sts	0x00E8, r24
    12a6:	73 db       	rcall	.-2330   	; 0x98e <Endpoint_ClearStatusStage>
    12a8:	ce 01       	movw	r24, r28
    12aa:	60 91 3d 02 	lds	r22, 0x023D
    12ae:	b4 de       	rcall	.-664    	; 0x1018 <CDC_Device_Event_Stub>
    12b0:	df 91       	pop	r29
    12b2:	cf 91       	pop	r28
    12b4:	08 95       	ret

000012b6 <itoa>:
    12b6:	fb 01       	movw	r30, r22
    12b8:	9f 01       	movw	r18, r30
    12ba:	e8 94       	clt
    12bc:	42 30       	cpi	r20, 0x02	; 2
    12be:	bc f0       	brlt	.+46     	; 0x12ee <itoa+0x38>
    12c0:	45 32       	cpi	r20, 0x25	; 37
    12c2:	ac f4       	brge	.+42     	; 0x12ee <itoa+0x38>
    12c4:	4a 30       	cpi	r20, 0x0A	; 10
    12c6:	29 f4       	brne	.+10     	; 0x12d2 <itoa+0x1c>
    12c8:	97 fb       	bst	r25, 7
    12ca:	1e f4       	brtc	.+6      	; 0x12d2 <itoa+0x1c>
    12cc:	90 95       	com	r25
    12ce:	81 95       	neg	r24
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	64 2f       	mov	r22, r20
    12d4:	77 27       	eor	r23, r23
    12d6:	6c d0       	rcall	.+216    	; 0x13b0 <__udivmodhi4>
    12d8:	80 5d       	subi	r24, 0xD0	; 208
    12da:	8a 33       	cpi	r24, 0x3A	; 58
    12dc:	0c f0       	brlt	.+2      	; 0x12e0 <itoa+0x2a>
    12de:	89 5d       	subi	r24, 0xD9	; 217
    12e0:	81 93       	st	Z+, r24
    12e2:	cb 01       	movw	r24, r22
    12e4:	00 97       	sbiw	r24, 0x00	; 0
    12e6:	a9 f7       	brne	.-22     	; 0x12d2 <itoa+0x1c>
    12e8:	16 f4       	brtc	.+4      	; 0x12ee <itoa+0x38>
    12ea:	5d e2       	ldi	r21, 0x2D	; 45
    12ec:	51 93       	st	Z+, r21
    12ee:	10 82       	st	Z, r1
    12f0:	c9 01       	movw	r24, r18
    12f2:	30 c0       	rjmp	.+96     	; 0x1354 <strrev>

000012f4 <fputs>:
    12f4:	ef 92       	push	r14
    12f6:	ff 92       	push	r15
    12f8:	0f 93       	push	r16
    12fa:	1f 93       	push	r17
    12fc:	cf 93       	push	r28
    12fe:	df 93       	push	r29
    1300:	7c 01       	movw	r14, r24
    1302:	8b 01       	movw	r16, r22
    1304:	db 01       	movw	r26, r22
    1306:	13 96       	adiw	r26, 0x03	; 3
    1308:	8c 91       	ld	r24, X
    130a:	81 fd       	sbrc	r24, 1
    130c:	03 c0       	rjmp	.+6      	; 0x1314 <fputs+0x20>
    130e:	cf ef       	ldi	r28, 0xFF	; 255
    1310:	df ef       	ldi	r29, 0xFF	; 255
    1312:	13 c0       	rjmp	.+38     	; 0x133a <fputs+0x46>
    1314:	c0 e0       	ldi	r28, 0x00	; 0
    1316:	d0 e0       	ldi	r29, 0x00	; 0
    1318:	0b c0       	rjmp	.+22     	; 0x1330 <fputs+0x3c>
    131a:	d8 01       	movw	r26, r16
    131c:	18 96       	adiw	r26, 0x08	; 8
    131e:	ed 91       	ld	r30, X+
    1320:	fc 91       	ld	r31, X
    1322:	19 97       	sbiw	r26, 0x09	; 9
    1324:	b8 01       	movw	r22, r16
    1326:	09 95       	icall
    1328:	89 2b       	or	r24, r25
    132a:	11 f0       	breq	.+4      	; 0x1330 <fputs+0x3c>
    132c:	cf ef       	ldi	r28, 0xFF	; 255
    132e:	df ef       	ldi	r29, 0xFF	; 255
    1330:	f7 01       	movw	r30, r14
    1332:	81 91       	ld	r24, Z+
    1334:	7f 01       	movw	r14, r30
    1336:	88 23       	and	r24, r24
    1338:	81 f7       	brne	.-32     	; 0x131a <fputs+0x26>
    133a:	ce 01       	movw	r24, r28
    133c:	cd b7       	in	r28, 0x3d	; 61
    133e:	de b7       	in	r29, 0x3e	; 62
    1340:	e6 e0       	ldi	r30, 0x06	; 6
    1342:	56 c0       	rjmp	.+172    	; 0x13f0 <__epilogue_restores__+0x18>

00001344 <__eerd_word_usb162>:
    1344:	a8 e1       	ldi	r26, 0x18	; 24
    1346:	b0 e0       	ldi	r27, 0x00	; 0
    1348:	42 e0       	ldi	r20, 0x02	; 2
    134a:	50 e0       	ldi	r21, 0x00	; 0
    134c:	15 c0       	rjmp	.+42     	; 0x1378 <__eerd_blraw_usb162>

0000134e <__eewr_word_usb162>:
    134e:	22 d0       	rcall	.+68     	; 0x1394 <__eewr_byte_usb162>
    1350:	27 2f       	mov	r18, r23
    1352:	21 c0       	rjmp	.+66     	; 0x1396 <__eewr_r18_usb162>

00001354 <strrev>:
    1354:	dc 01       	movw	r26, r24
    1356:	fc 01       	movw	r30, r24
    1358:	67 2f       	mov	r22, r23
    135a:	71 91       	ld	r23, Z+
    135c:	77 23       	and	r23, r23
    135e:	e1 f7       	brne	.-8      	; 0x1358 <strrev+0x4>
    1360:	32 97       	sbiw	r30, 0x02	; 2
    1362:	04 c0       	rjmp	.+8      	; 0x136c <strrev+0x18>
    1364:	7c 91       	ld	r23, X
    1366:	6d 93       	st	X+, r22
    1368:	70 83       	st	Z, r23
    136a:	62 91       	ld	r22, -Z
    136c:	ae 17       	cp	r26, r30
    136e:	bf 07       	cpc	r27, r31
    1370:	c8 f3       	brcs	.-14     	; 0x1364 <strrev+0x10>
    1372:	08 95       	ret

00001374 <__eerd_block_usb162>:
    1374:	dc 01       	movw	r26, r24
    1376:	cb 01       	movw	r24, r22

00001378 <__eerd_blraw_usb162>:
    1378:	fc 01       	movw	r30, r24
    137a:	f9 99       	sbic	0x1f, 1	; 31
    137c:	fe cf       	rjmp	.-4      	; 0x137a <__eerd_blraw_usb162+0x2>
    137e:	06 c0       	rjmp	.+12     	; 0x138c <__eerd_blraw_usb162+0x14>
    1380:	f2 bd       	out	0x22, r31	; 34
    1382:	e1 bd       	out	0x21, r30	; 33
    1384:	f8 9a       	sbi	0x1f, 0	; 31
    1386:	31 96       	adiw	r30, 0x01	; 1
    1388:	00 b4       	in	r0, 0x20	; 32
    138a:	0d 92       	st	X+, r0
    138c:	41 50       	subi	r20, 0x01	; 1
    138e:	50 40       	sbci	r21, 0x00	; 0
    1390:	b8 f7       	brcc	.-18     	; 0x1380 <__eerd_blraw_usb162+0x8>
    1392:	08 95       	ret

00001394 <__eewr_byte_usb162>:
    1394:	26 2f       	mov	r18, r22

00001396 <__eewr_r18_usb162>:
    1396:	f9 99       	sbic	0x1f, 1	; 31
    1398:	fe cf       	rjmp	.-4      	; 0x1396 <__eewr_r18_usb162>
    139a:	1f ba       	out	0x1f, r1	; 31
    139c:	92 bd       	out	0x22, r25	; 34
    139e:	81 bd       	out	0x21, r24	; 33
    13a0:	20 bd       	out	0x20, r18	; 32
    13a2:	0f b6       	in	r0, 0x3f	; 63
    13a4:	f8 94       	cli
    13a6:	fa 9a       	sbi	0x1f, 2	; 31
    13a8:	f9 9a       	sbi	0x1f, 1	; 31
    13aa:	0f be       	out	0x3f, r0	; 63
    13ac:	01 96       	adiw	r24, 0x01	; 1
    13ae:	08 95       	ret

000013b0 <__udivmodhi4>:
    13b0:	aa 1b       	sub	r26, r26
    13b2:	bb 1b       	sub	r27, r27
    13b4:	51 e1       	ldi	r21, 0x11	; 17
    13b6:	07 c0       	rjmp	.+14     	; 0x13c6 <__udivmodhi4_ep>

000013b8 <__udivmodhi4_loop>:
    13b8:	aa 1f       	adc	r26, r26
    13ba:	bb 1f       	adc	r27, r27
    13bc:	a6 17       	cp	r26, r22
    13be:	b7 07       	cpc	r27, r23
    13c0:	10 f0       	brcs	.+4      	; 0x13c6 <__udivmodhi4_ep>
    13c2:	a6 1b       	sub	r26, r22
    13c4:	b7 0b       	sbc	r27, r23

000013c6 <__udivmodhi4_ep>:
    13c6:	88 1f       	adc	r24, r24
    13c8:	99 1f       	adc	r25, r25
    13ca:	5a 95       	dec	r21
    13cc:	a9 f7       	brne	.-22     	; 0x13b8 <__udivmodhi4_loop>
    13ce:	80 95       	com	r24
    13d0:	90 95       	com	r25
    13d2:	bc 01       	movw	r22, r24
    13d4:	cd 01       	movw	r24, r26
    13d6:	08 95       	ret

000013d8 <__epilogue_restores__>:
    13d8:	2a 88       	ldd	r2, Y+18	; 0x12
    13da:	39 88       	ldd	r3, Y+17	; 0x11
    13dc:	48 88       	ldd	r4, Y+16	; 0x10
    13de:	5f 84       	ldd	r5, Y+15	; 0x0f
    13e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    13e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    13e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    13e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    13e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    13ea:	b9 84       	ldd	r11, Y+9	; 0x09
    13ec:	c8 84       	ldd	r12, Y+8	; 0x08
    13ee:	df 80       	ldd	r13, Y+7	; 0x07
    13f0:	ee 80       	ldd	r14, Y+6	; 0x06
    13f2:	fd 80       	ldd	r15, Y+5	; 0x05
    13f4:	0c 81       	ldd	r16, Y+4	; 0x04
    13f6:	1b 81       	ldd	r17, Y+3	; 0x03
    13f8:	aa 81       	ldd	r26, Y+2	; 0x02
    13fa:	b9 81       	ldd	r27, Y+1	; 0x01
    13fc:	ce 0f       	add	r28, r30
    13fe:	d1 1d       	adc	r29, r1
    1400:	0f b6       	in	r0, 0x3f	; 63
    1402:	f8 94       	cli
    1404:	de bf       	out	0x3e, r29	; 62
    1406:	0f be       	out	0x3f, r0	; 63
    1408:	cd bf       	out	0x3d, r28	; 61
    140a:	ed 01       	movw	r28, r26
    140c:	08 95       	ret

0000140e <_exit>:
    140e:	f8 94       	cli

00001410 <__stop_program>:
    1410:	ff cf       	rjmp	.-2      	; 0x1410 <__stop_program>
